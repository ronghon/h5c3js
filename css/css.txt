2019HTML+CSS網頁布局前端入門基礎(pink老師)
05.WEB標準由結構、表現和行為三大部份組成,結構->HTML  表現->CSS(外觀樣式)  行為->JAVASCRIPT(交互效果)
10.<!DOCTYPE html>文檔類型標籤  <html lang="en" 或 "zh-tw"> <meta  charset="UTF-8" />
11.添加具有語意標籤可使頁面結構更清晰易懂
16.div和span均是盒子標籤,没有語意,主要用來布局
  div 獨佔一行 span 不可會獨佔一行
17.img圖像標籤
  img 單標籤  需有src屬性 src="路徑"  alt="替換文字"-->當圖片無法顯示時以文字替換 
  title="提示文字"-->當鼠標放到圖像上顯示的提示文字或圖片說明文字
18.圖片大小
  width="200"-->不用加單位,寛度200px 
  height="300"-->高度300px 一般寛高只設置一個即可,使其等比例縮放
  border="5"-->邊框5px 預設為黑色
21.相對路徑與絕對路徑
  相對路徑:以引用文件所在位置為參考基礎,區分為三種:
  1.同一級路徑:與HTML文件同一級,直接寫即可
  2.上一級路徑:相對於HTML文件而言,使用"../"
  3.下一級路徑:相對於HTML文件而言,使用"/"
23.絕對路徑:目錄上的絕對位置,可能是本機目錄夾(D:\\web\img\logo.jpg),也可以是完整的網路地址(http://www.goole.con.tw)
24.超鏈接標簽(a) 需有herf屬性,鏈接到那一個頁面
  <a herf="http://www.google.com">名字</ａ＞內可含有target 打開窗口方式,默認值:_self 當前窗口打開頁面,_blank新窗口打開頁面
25.可內部鏈接和外部鏈接,網頁元素如文本、圖片、表格、音頻、視頻等均可添加超鏈接
26.鏈接分類:
  1.外部鏈接:連結至某一網頁頁面 <a herf="http://www.google.com">google</a>
  2.內部鏈接:連結至網站內部頁面 <a herf="index.html">首頁</a>
  3.空鏈接:當鏈接目標尚未確定時 <a herf="#">首頁</a>
  4.下載鏈接:下載地址內包含是一個文件或壓縮包時,點擊時會下載該檔案
  5.網頁元素鏈接:網頁中的各種網頁元素,如文本、圖像、表格、音頻、視頻等都可添加超鏈接
  6.錨點鏈接:網頁定位快速跳轉到某一位置 <a herf="#two">第二級</a>  目標位置設置id="two"使用
27.注釋和特殊字符
  1.ctrl+/  <!-- 內容注釋 -->
  2.特殊字符:以 & 開頭 ; 結尾 --> 空格 &nbsp;  < &lt;  > &gt;    &copy;
32-33表格
  table 表格  th 表頭(文本加粗且居中)  tr 行  td  單位格
  表格屬性:在<table>標籤中
  1.對齊:align="left center  right"
  2.邊框:border   border="1"
  3.cellpadding:文字到邊框之間的距離 
  4.cellspacing:單位格之間的距離,默認為2px
  5.width 或 height="200"或百分比,不用加px
  <thead>表格頭部區域
  <tbody>表格主體區域
36.合併單位格
  1.rowspan:跨行合併  代碼寫在最上側單元格(目標單元格)  刪除多餘的單元格
  2.colspan:跨列合併  代碼寫在最左側單元格(目標單元格)
38.列表標籤:主要用來布局,區分為三大類:無序、有序、自定義列表
  ul無序  ol有序  dl自定義  li列表項
  ul中只能嵌套li標籤,但li列表項相當於一個容器,可以容納所有元素
  dl定義描述列表,dt定義項目,dd項目進一步描述, dl下只能有dt及dd,可以同時有多組dt及dd,dt和dd內可以放任何標籤
42.表單form:目的收集用戶信息,由表單域、表單控件(元素)、提示信息三個部份組成
  表單域<form>會把範圍內的表單元素及信息提交給服務器,屬性有 
   1.action="url地址"
   2.method="提交方式"
   3.name="表單域名稱" 區分表單域
44.表單元素:
  1.input:輸入,用於收集用戶輸入信息,必須包含type屬性 <input type="屬性值" />  單標籤
   (1)type屬性值:
      button:按鈕 
      reset:重置按鈕,可還原表單元素初始默認狀態,清除表單內輸入內容  
      submit:提交按鈕,可透過value="新文字"更改文字,可把表單域(form)內的表單元素裏面的值提交給後台服務器 
      checkbox:複選框  radio:單選框()
      file:可供文件上傳
      text:單行文本輸入,默認寛度20個字符
      password:密碼,輸入字符不會顯示出來
    (2)name:input表單元素的名字,可用來區別不同的表單, 單選或多選時需使用相同的name值
    (3)value:input表單元素的值,會顯示在輸入框內
    (4)checked:默認選中按鈕,單選或多選時使用 checked="checked"
    (5)maxlength:最大長度
51.label標籤:為input元素定義標注,用於綁定一個表單元素,當點擊label標籤內的文本時,瀏覽器就會自動將焦點(光標)或選擇
   對應的表單元素上,可增加用戶體驗,使用for屬性與input 中的id屬性相同 
   <label for="sex">男</label>  <input type="radio" name="sex" id="sex" />
52.select下拉表單元素:用於多個選項可供用戶選擇時,使用option定義選項,至少包含一對<option></option>,可在<option>中
   定義selected="selected",即當前選項為默認選中項目
53.textarea文本域元素:與input中的text不同的是text是單行文本,且有字數限制,但textarea文本域可多行輸入,無字數限制,可
   自行設置字數,常見用於留言版,評論等
   rows="5" 設置5行  cols="200" 設置200列   文本域長寛大小通常透過css來設置
59.查閱文檔
  1.w3c school 有離線版
  2.MDN
60.CSS==================================================================================================================================
  css網頁美容師
  1.HTML主要做結構,顯示元素內容
  2.CSS美化HTML,布局網頁
  3.CSS最大價值,由HTML專注做結構呈現,樣式部份交給CSS,使結構與樣式分離
62.CSS語法規範
  CSS樣式規則主要由兩個部份組成:選擇器及樣式聲明{鍵值對-->屬性名:屬性值}
64.選擇器的作用:根據不同需求把不同的標籤選出來,用來選擇標籤用
65.選擇器分為基礎選擇器和複合選擇器兩大類
  1.基礎選擇器:由單個選擇器組成,包含標籤選擇器、類選擇器、id選擇器和通配符選擇器
  2.複合選擇器:標籤選擇器、類選擇器、id選擇器和通配符選擇器
  標籤選擇器:以HTML的標籤名稱作為選擇器,為頁面中某一類標籤指定統一的CSS樣式
66.類選擇器:適用於差異化選擇不同的標籤,單獨選某一個或某幾個(可重複),HTML標簽中以class="類名",CSS選擇器則以.類名{}方式選擇該標籤
  口訣:樣式點定義 結構類調用 一個或多個 開發最常用
68.多類名:類名之間需以空格間隔,可把公共樣式放到同一個樣式內,區隔內容方便日後修改
69.id選擇器:以id屬性來設置id選擇器,CSS中以#id名來定義,id="屬性名",相同的屬性名只能在HTML中使用一次,具有唯一性,
  口訣:樣式#定義,結構id調用,只能調用一次,別人切勿使用
  id選擇器和類選擇器最大區別是使用次數,id只能調用一次,class可多次重複調用
70.通配符選擇器(*):選取頁面中所有元素(標籤) *{} 通常用來清除網頁中默認樣式或設置所有網頁中公共樣式
71.字體樣式屬性:包含字體、大小、粗細、文字樣式(斜體..)
  1.字體:font-family: Arial,'Microsoft Yahei',字體與字體之間以,隔開,字體名字有多個單詞時,以引號引起來,一般設置給body
  2.大小:font-size: 20px;必須加px單位,不同瀏覽器默認字體大小不同,所以開發時應設置網頁明確的字體大小,一般都設置給body
  3.粗細:font-weight:bold-->700, normal-->400
  4.文字樣式:font-style:設置文本的風格, normal(使傾斜字體不傾斜)  italic:斜體
  5.複合樣式:font:font-style font-weight font-size/font-height font-family 
    (1)順序不可顛倒 
    (2)font-size和font-family必須有,其餘可省略,否則font簡寫形式不起作用
77.文本屬性:文本外觀包含:文字顏色、對齊方式、裝飾文本、文本縮進，行間距等
  1.文本顏色:color:可使用顏色名、16進制#ffff00  rgb(255,0,255)
  2.對齊文本:text-align 只能設置文本內容水平對齊方式,無法設置垂直對齊 left right center
  3.裝飾文本:text-decoration 給文本添加下劃線(a鏈接自帶)underline、刪除線line-through、上劃線overline等,
    去除下劃線 text-decoration: none; 
  4.文本縮進:text-indent 首行縮進  通常設置為text-indent: 2em; em:是一個相對單位,指的是當前元素一個文字的大小
  5.行間距:line-height 指行間的距離(行高)
83.套用CSS三種方式
  1.行內樣式：行內使用全局屬性style,權重最高
  2.內部樣式：將各樣式直接於<head>內設定<style>
  3.外部樣式：於<head>內使用<link>連結外部css檔案
90.chorme調試工具 F12
95.複合選擇器:由兩個或多個基礎選擇器進行不同方式的組合而成的,常用包括:後代選擇器、子選擇器、並集選擇器、偽類選擇器。
  1.後代選擇器:可以選擇祖先元素下所有子孫元素,中間以空格分隔 x y{} 
		(1)選擇的目標是y元素
		(2)可以多層,一般不要超過3層,選擇的目標是最後一層元素
		(3)可以是任意基礎選擇器的組合 ex:class ul li
	2.子元素選擇器:只能選擇某元素的最近一級子元素(親兒子元素),以">"分隔
	3.並集選擇器:可以選擇多組標籤同時為他們定義相同的樣式,通常用於集體聲明,以","分隔,任何形式的選擇器都可以作為並集選擇器的一部份
		x,y{}-->同時選擇x 和y 
	4.偽類選擇器:用於向某些選擇器添加特殊的效果,如為鏈接添加特殊效果或選擇第一個,第n個元素,以冒號(:)表示,:hover :link :first-child ,
		區分為鏈接偽類、結構偽類等
		(1)鏈接偽類:LVHA  
			a:link	 -->設置所有未被訪問過(未被點擊過)鏈接的狀態	 
			a:visited-->設置所有已被訪問過(已點擊過)鏈接的狀態
			a:hover  -->選擇鼠標指針位於其上(鼠標經過時)鏈接改變的狀態
			a:active -->選擇活動鏈接(鼠標按下未彈起時的狀態)
			注意事項:
			1.為確保生效,請按照LVHA的順序聲明
			2.因為a鏈接在瀏覽器中具有默認樣式,因此,通常需給a鏈接單獨指定樣式
		(2):focus 偽類選擇器:用於選取獲取焦點的表單元素 input:focus {}
		
104.元素顯示模式:意即在網頁中以什麼方式進行顯示	,一般區分為塊元素,行內元素兩大類	
	塊級元素:div h1~h6 p ul ol li 等,特點如下:
	1.獨佔一行
	2.可設置寛、高、內外邊距
	3.未設置寛度時,默認為容器(父級寛度)的100%
	4.是一個容器及盒子,裏面可放行內或塊級元素
	特別注意事項:文字類的元素(ex:p h1~h6)內不能再嵌套其他塊級元素
106.行內元素:常見有a strong b em i del ins u span等,亦稱為內聯元素,特點如下:
	1.相鄰行內元素在同一行上,一行可以顯示多個
	2.無法設置寛、高
	3.默認寛度為它自己本身內容的寛度
	4.行內元素只能容納文本或其他行內元素,不可嵌套塊級元素
	注意事項:
	1.a鏈接內不能再放鏈接
	2.a鏈接內可以嵌套塊級元素,但一般都執行轉換為塊級模式最安全
107.行內塊元素:img input td 等,同時具有塊元素及行內元素的特點,其特點如下:
	1.和相鄰行內元素在同一行上,但他們之間會有空白縫隙,一行可以顯示多個(行內元素特點)
	2.默認寛度是它自己本身內容的寛度(行內元素特點)
	3.可設置寛、高、內外邊距(塊級元素特點)
109.元素顯示模式轉換:特殊模式下,將一個模式轉換為另一種模式的特性,ex:a鏈接為增加觸發範圍轉換為塊級元素
	display: block;  -->轉換為塊級元素
	display: inline; -->轉換為行內元素
	display: inline-block; 轉換為行內塊元素
112.單行文字垂直居中:設置文字的行高等於盒子的高度
	原理:行高等於文字本身高度+上間隙+下間隙, 上下間隙相等,
113.背景屬性:包括背景顏色、背景圖片、背景平舖、背景圖片位置、背景圖片固定等,一般使用於logo或裝飾性的小圖片或超大背景圖片,便於控制位置
	1.背景顏色:background-color: red; 默認值transparent(透明)
	2.背景圖片:background-image: url(路徑) 便於控制位置,經常使用背景精靈圖,可省資源
	3.背景平舖:background-repeat: no-repeat(不平舖) | repeat-x(沿著X軸平舖) | repeat-y(沿Y軸平舖)
		注意點:頁面元素既可以添加背景顏色,亦可設置背景圖片,但背景圖片會壓住背景顏色
	4.背景圖片位置:background-position: x y; x坐標和y坐標,可使用方位名詞或百分比或像素值
		(1)使用方位名詞時,前後順序無關,但只指定一個方位名詞,另一個默認為居中對齊
		(2)使用精確單位: x坐標 y坐標,如只設置一個值,另一個值為垂直居中
		(3)使用混合方式:有順序關係,第一個值為x軸坐標,第二個值為y軸坐標  20px top
	5.背景圖片固定(背景附著):background-attachment主要用來設置背景圖片是否固定或隨頁面滾動
		(1)滾動:scroll
		(2)固定:fixed
	6.簡寫:background
		(1)順序無關,但習慣上晝寫順序:顏色 圖片 平舖 滾動或固定 位置
  7.背景半透明: background: rgba(0,0,0,0.3),最後一個參數值0~1 透明:0  不透明:1 半透明:0.5
		注意:是讓盒子背景色半透明,盒子內的內容不受影響(css3新增屬性,IE9以上支持)
127.CSS三大特性:層疊性、繼承性、優先級===================================================================================================
	1.層疊性:主要用來解決樣式衝突問題,相同選擇器設置相同的樣式,後面設置的樣式會覆蓋(層疊)另一個衝突的樣式
		遵循原則:就近原則,那個樣式離結構近,就執行那一個樣式
	2.繼承性:子元素會繼承父元素的某些樣式(需該屬性可以繼承),子承父業,適當使用可簡化代碼,降低CSS樣式的複雜性
		(1)一般文本類(text- font- line- 這些元素開頭的均可繼承及color)
		(2)行高的繼承性:當父元素設置font:16px/1.5  1.5不用加單位,如子元素没有設置行高,則會繼承父元素的行高1.5倍,而子元素設置
			font-size:20px 則子元素的行高等於1.5*20=30px
	3.優先級:
		(1)選擇器相同,則執行層疊性,選擇器不同,則根據選擇器權重執行	
		(2)繼承或*通配符選擇器: 0,0,0,0
		   元素選擇器        : 0,0,0,1
			 類或偽類選擇器			: 0,0,1,0
			 ID選擇器					: 0,1,0,0
			 行內樣式				  : 1,0,0,0
			 !important       : 無窮大, !important寫在屬性值後面
		(3)權重有4組數字組成,但不會進位,等級判斷由左至右,如數值相同則判斷下一位數值,繼承的權重是0,如該元素没有直接選中,
		   不管父元素的權重有多高,子元素得到的權重都是0
			 特別注意點:
			 (1)要判斷標籤到底執行那個樣式,就先看這個標籤有没有直接被選出來(是否衝突)
			 (2)a鏈接瀏覽器默認制定了一個樣式(color:blue 且 text-decroation:underline;),所以如要改變a鏈接默認樣式需另外設置
		(4)權重疊加:適用於複合選擇器,權重雖有疊加問題,但不會進位
135.CSS盒子模型-->	頁面布局三大核心:盒子模型、浮動、定位
	1.網頁布局過程:
		(1)先規劃好相關的網頁元素,網頁元素基本都是盒子BOX-->HMTL結構
		(2)利用CSS設置盒子樣式,再擺放到需求位置-->CSS
		(3)將內容裝入盒子
	2.盒子模型組成:包括邊框(border)、內邊距(padding)、外邊距(margin)、實際內容(content)		
137.邊框(border)由邊框寛度(粗細)、邊框樣式、邊框顏色三個部份組成
	1.border-width:3px; 邊框寛度
	2.border-style:solid(實線)、dashed(虛線)、dotted(點線)
	3.border-color:預設black黑色,
	簡寫形式:border: 上述三個屬性没有順序問題 
	也可分開指定上下左右邊框  border-top boder-left border-right border-bottom		
138.表格的細邊框 
	border-collapse:控制瀏覽器繪製表格邊框的方式,它控制相鄰單元格的邊框
	border-collapse:collapse;   collapse合併之意
141.內邊框(padding)指的是邊框與內容之間的距離,有上右下左四個方位的距離(top right bottom left)
	簡寫形式:padding:5px;  一個值-->上下左右均為同一個值
												兩個值-->上下第一個值,左右第三個值
												三個值-->上(第一值)、左右(第二值)、下(第三值)
												四個值-->上右下左 順時針分別代表的值
	1.可巧妙利用padding使導航條之間的距離相等
	2.如果盒子本身没有設定width或height屬性,則此時padding不會撐開盒子大小
148.外邊距(margin):指盒子與盒子之間的距離,與padding相同均有上右下左四個方位的距離(top right bottom left)
	1.簡寫形式margin:與padding規範相同
	2.典型應用:可使塊級盒子水平居中,滿足兩條件:盒子需指定寛度,	盒子的左右外邊距設置為auto-->margin:0 auto;
150.行內元素及行內塊元素水平居中,給父元素添加text-align:center;即可
151.外邊距合併問題,主要有兩種情況:
	1.相鄰塊元素(兄弟關係)垂直外邊距的合併問題:兩者之間取數值較大者,解決方法:只給一個盒子添加margin值即可
	2.嵌套塊元素(父子關係)垂直外邊距塌陷問題:即父元素和子元素均設置外邊距,此時父元素會塌陷較大的外邊距值
		解決方案:(1)為父元素添加上邊框
						(2)為父元素添加內邊距
						(3)為父元素添加overflow:hidden;(常用)
						(4)添加浮動、固定定位或絕對定的盒子就不會有塌陷問題
153.清除內外邊距:網頁元素很多都帶有默認的內外邊距,而且不同的瀏覽器默認的設定值也不同,因此在布局前,會先清除網頁元素的默認內外邊距
		*{margin:0; padding:0;}
		注意:行內元素考慮兼容性問題,只設置左右內外邊距,不要設置上下內外邊距,但如轉換為塊級或行內塊元素就可以了。
154.ps基本操作==========================================================================================================================
	1.ctrl+R 打開標尺 右擊標尺更改單位為像素
164.CSS3新增三個屬性:圓角邊框、盒子陰影、文字陰影
	1.圓角邊框:border-radius:length;  radius半徑,用於設置元素的外邊框圓角
	  (1)圓形:設置一個正方形盒子的四個角border-radius:50%即可獲得一個圓形
		(2)圓角矩形:同樣設置border-radius:高度的50%即可		
		(3)設置四個角不同的圓角:左上 右上 右下 左下(四個值)  左上和右下  右上和左下(兩個值)
		(4)也可以單獨設置某一個角:border-top-left-radius(左上角)、border-top-right-radius(右上角) 
166.盒子陰影:box-shadow為盒子添加陰影,盒子陰影不佔空間,不會影響其他盒子排列
	語法:box-shadow:h v blur spread color inset;
	  h-shadow:水平陰影的位置,允許負值(必需)
	  v-shadow:垂直陰影的位置,允許負值(必需)
		blur模糊距離  spread陰影尺寸  color陰影顏色(通常使用rgba(0,0,0,.3))  inset 內陰影  outset外陰影
167.文字陰影:text-shadow
		box-shadow:h v blur color;
169.CSS浮動=============================================================================================================================
	傳統三種布局方式:一個頁面基本上都包含這三種布局方式共同組合而成
	1.標準流(普通流)(文檔流):就是標籤按照規定好的默認方式順序排列
	2.浮動
	3.定位
170.為什麼需要浮動?浮動可以改變元素標籤默認的排列方式,典型應用:讓多個塊級元素一行內排列顯示
	網頁布局第一準則:多個塊級元素縱向排列找標準流,多個塊級元素橫向排列找浮動。
	浮動(float):用於創建浮動框,將其移動到一邊,直到左邊緣或右邊緣及包含塊或另一個浮動框的邊緣。
		none:不浮動(默認)
		left:左浮動  right:右浮動
172.浮動特性*****
	1.浮動元素會脫離標準流(脫標)意即脫離標準流的控制移動到指定位置,浮動的盒子不再保留原先的位置
	2.浮動的元素會一行內顯示並且元素頂部對齊
	3.浮動的元素會具有行內塊元素的特性:任何元素都可以浮動,不管原先是什麼模式的元素,添加浮動之後的元素都具有行內塊元素相似的特性
		意即:如果行內元素添加浮動之後,則不需要轉換為塊級或行內塊元素,就可以直接設置寛高
		如果塊級盒子没有設置寛度,默認寛度和父級一樣寛,但添加浮動後,它的大小是根據內容來決定
		浮動的盒子中間是没有縫隙的,緊密在一起的
		行內元素與塊級元素同理
175.浮動元素經常和標準流父級搭配使用
	為了約束浮動元素的位置,網頁布局一般採取的策略:先用標準流的父元素排列上下位置之後,內部子元素採取浮動排列左右位置,以符合網頁布局第一準則
179.網頁布局第二準則:先設置盒子大小,再設置盒子位置	
181.浮動布局注意點:
	1.浮動和標準流的父盒子搭配使用:先用標準流的父元素排列上下位置,之後內部子元素採取捊動排列左右位置
	2.一個元素浮動了,理論上其餘的兄弟元素也要浮動:一個盒子裏面有多個盒子,如果其中一個盒子浮動了,那麼其他兄弟也應該浮動,以防止引起問題
		**浮動的盒子只會影響浮動盒子後面的標準流,不會影響前面的標準流
182.為什麼需要清除浮動?
	1.父盒子没有設置高度
	2.子盒子均設置浮動
	3.影響下面的標準流布局,所以需要清除浮動
	父盒子一定要給高度嗎?理想狀態下,讓子盒子撐開父盒子的高度,但當子元素均浮動後,會發生父盒子的高度塌陷了(0),以致影響下面的標準流盒子,
	(產生原因:由於浮動元素不再佔有原文檔流的位置,所以它會對後面的元素排版產生影響)
	解決方法:清除浮動
183.清除浮動的本質:就是清除浮動對下面元素所造成的影響,清除浮動之後,父級就會根據浮動的子盒子自動檢測高度,父級有了高度,就不會影響下面的標準流
	語法:選擇器{clear:屬性值;} 屬性值包括left right  both  清除浮動的策略是閉合浮動
	清除浮動的方法:
	1.額外標籤法:隔牆法,W3C推薦
		在浮動元素末尾添加一個空的塊級標籤,否則不起作用,如<div style=clear:both"></div> 或 <br />,缺點:需添加額外無意義的標籤,結構化較差。
	2.父級添加overflow:hidden 或 auto或 scroll,缺點:無法顯示溢出部份
	3.父級添加after偽元素:
		.clearfix:after {
			content:"";
			display: block;
			height: 0;
			clear: both;
			visibility: hidden;
		}
		.clearfix{
			*zoom: 1;  //IE 67專用
		}
	4.父級添加雙偽元素:
		.clearfix:before,.clear:after {
			content:"";
			display: table;
		}
		.clearfix:after {
			clear: both;
		}
		.clearfix {
			*zoom: 1;
		}
188.ps切圖==============================================================================================================================
		圖層切圖、切片切圖、PS插件切圖等
		1.圖層切圖-->移動工具點選->右鍵->快速導出為PNG 如為多個圖層則先合併圖層,然後再導出PNG
		2.切片切圖-->切片工具->選取區域->文件->導出>存儲為web使用->選擇圖片格->存儲
		3.cutterman切圖插件->一鍵導出
195.CSS屬性書寫順序(建議)
	1.布局定位屬性:display/position/float/clear/visibility/overflow
	2.自身屬性:width/height/margin/padding/border/background
	3.文本屬性:color/font/text-decoration/text-align/vertical-align/white-space/break-word
	4.其他屬性行為CSS3):content/cursor/forder-dadius/box-shadoe/text-shadow/backfround:linear-gradient...
196.頁面布局整體思考方向
	1.確認頁面版心,如寛高  規劃或測量
	2.分析頁面中的行、列排列方式
	3.再分析一行中列的大小和位置
	4.先有HTML結構,再利用CSS美化,結構永遠最重要
	5.開始寫代碼,實戰經驗積累才能日益成長
199.導航欄注意點:不要直接用a鏈接,而是用li包含a鍵接,不要給寛度而是利用padding將盒子之間距離撐開即可,方便日後再添加
208.浮動的盒子不會有外邊距合併的問題
221.CSS定位=============================================================================================================================
	1.為什麼需要定位?
		(1)浮動可讓多個塊級盒子一行没有縫隙排列顯示,經常用於橫向排列盒子。
		(2)定位可讓盒子自由的在某個盒子內移動位置或固定屏幕中某個位置,並且可以壓住其他盒子。
	2.定位組成:將盒子擺放到頁面中的某一個位置,主要是按照坐標來定位擺放和移動盒子
		定位=定位模式+邊偏移		定位模式用於指定一個元素在文檔中的定位方式,邊偏移則決定該元素的最終位置
		a.定位模式(定位方式):position,有四個屬性值:
			(1)static    靜態定位(默認)無定位之意,按照標準流特性擺放位置,没有邊偏移
			(2)relative  相對定位
			(3)absolute	 絕對定位
			(4)fixed		 固定定位	
		b.邊偏移:有四個方位值
			(1)top:元素相對父元素上邊線的距離
			(2)botton:元素相對父元素下邊線的距離
			(3)left:元素相對父元素左邊線的距離
			(4)right:元素相對父元素右邊線的距離
	3.相對定位:relative,元素在移動位置時,是相對於它原來位置來說的(自戀型)
		特點:1.它總是相對於自己原來的位置來移動的
				 2.原來位置繼續佔有,後面的盒子仍然以標準流的方式對待它(不脫標,繼續保留原來位置)
		相對定位不脫標,典型應用是給絕對定位當爹用(子絕父相)
	4.絕對定位:absolute,元素在移動位置時,是相對於它祖先元素來說的(拼爹型)
		特點:1.如果没有祖先元素或祖先元素没有定位,則以瀏覽器為準定位(document文檔)
				 2.如果祖先素有定位(相對、絕對或固定定位),則以最近一級有定位的祖先元素為參考點移動位置。
			   3.絕對定位不佔有原有位置(脫標)
	5.子絕父相的由來-->絕對定位和相對定位的使用場景(子級絕對定位,父級相對定位)
		(1)子級絕對定位,不會占有位置,可以放到父盒子裏面的任何一個地方,不會影其他的兄弟盒子
		(2)父盒子需加定位限制子盒子在父盒子內顯示
		(3)父盒子布局時,需要占有位置,因此父級只能使用相對定位
		總結:因父級需占有位置,因此使用相對定位,子盒子不需占有位置,則是絕對定位
	6.固定定位:fixed,元素固定於瀏覽器可視區的位置,可以在瀏覽器頁面滾動時元素的位置不會改變
		特點:1.以瀏覽器的可視窗口為參照點移動元素,與父級元素没有任關係,且不隨滾動條滾動
				 2.固定定不佔有原有位置(脫標,可視為一種特殊的絕對定位)
		小技巧:固定在版心右側位置,兩步驟:
			1.讓固定定位的盒子設置left:50%,移動至瀏覽器可視區的一半位置
			2.讓固定定位的盒子再使用margin-left移動版心寛度的一半距離
	7.粘性定位:sticky,可視為是相對定位和固定定位的混合
		特點:1.以瀏覽器的可視窗口為參照點移動位置(固定定位特點)
				 2.粘性定位是占有原先的位置(相對定位特點)
				 3.必須添加top、bottom、left、right其中一個才有效
		跟隨頁面滾動搭配使用,兼容性較差,IE不支持
	8.定位疊放次序:z-index	  z軸
		(1)盒子重疊時,使用z-index控制盒子的前後次序
		(2)數值可以是正整數、負數或0、默認值是auto,數值越大,盒子越靠上
		(3)如果屬性值相同時,則按照書寫順序,後來居上	
		(4)數字後面不能加單位
		(5)只有定位的盒子才有z-index屬性,標準流和浮動不適用
	9.定位的拓展
		(1)絕對定位的盒子水平居中、垂直居中
			 加了絕對定位的盒子不能通過margin:0 auto水平居中,需透過下列設置實現:
			 a.left:50%-->讓盒子的左側移動到父級元素的水平中心位置
			 b.margin-left:-50%-->讓盒子再向左移動自身寛度的一半。
		(2)定位特殊特性:絕對定位與固定定位與浮動類似具有以下特性:
			a.行內元素添加絕對或固定定位後,可直接設置寛高
			b.塊級元素添加絕對或固定定位後,如果未設置寛高時,默認大小是內容本身大小。
		(3)脫標的盒子不會觸發外邊距塌陷問題-->浮動元素、絕對或固定定位元素都不會觸發外邊距合併的問題
		(4)浮動的元素只會壓住它下面標準流的盒子,但不會壓住下面標準流的文字(圖片)-->浮動的本質,最初是用來作文繞圖效果用
			 而絕對(固定)定位則會壓住下面標準流所有的內容
243.網頁布局總結:
	1.通過盒子模型,了解大部份HTML標籤是一個盒子
	2.通過CSS浮動、定位可以讓每個盒子排列成為網頁
	3.一個元整的網頁,是由標準流、浮動、定位一起完成布局的,每個屬性均有自己專門的用法
		(1)標準流:可以讓盒子上下排列或左右排列,垂直的塊級盒子顯示就用標準流布局。
		(2)浮動:可以讓塊級元素一行顯示或左右對齊盒子,多個塊級盒子水平顯示就用浮動布局
		(3)定位:定位最大特點是有層疊概念,就是可以讓多個盒子前後疊壓來顯示,如果元素自由在某個盒子內移動就用定位布局
244.元素顯示與隠藏:就是讓一個元素在頁面中顯示或隠藏,三種方式控制
	1.display:顯示或隠藏,display:none;隠藏元素,且不再占有原來位置,display:block;除了轉換為塊級元素外,用來顯示元素
	2.visibility:可見性,visible:顯示可見,hidden:元素隠藏,繼續占有原來位置
	3.overflow:溢出顯示隠藏,visible:超出部份顯示可見(默認),hidden:超出部份隠藏,scroll一定出現滾動條,auto溢出時才出現滾動條
	  (有定位的盒子,請慎用overflow:hidden,因為它會隠藏多餘部份)
250.CSS高級=============================================================================================================================================================
	1.精靈圖:為了有效減少服務器接收和發送請求的次數,提高頁面的加載速度,使用CSS精靈圖(雪碧圖sprite)
	  核心原理:將網頁中一些小背景圖像整合到一張大圖中,再利用background-position背景圖片定位方式找到該圖片,如此就可降低對服務器的請求
	  一般情況下精靈圖的坐標值均為負值(網頁中的坐標:x軸往右是正值,往左邊是負值,y軸往下是正值,往上是負值)
	2.字體圖標:主要用於顯示網頁中通用、常用的一些小圖標,雖然精靈圖也是有些缺點:

			




絕對(位址)路徑:在任何情況下,都可以找得到的地址,完整位置路徑,ex:http://www.google.com/
相對(位址)路徑:以當前所在目錄為基礎,相對位址,以./表示當前目錄, ../表示跳出當前目錄到上一層目錄

標籤嵌套:
  1.超鏈接不能嵌套超鏈接
  2.p標籤不能嵌套p標籤
  3.標題h1-h6也不能互相嵌套

form method=get or post
      get獲取數據,請求發送的數據都會寫在地址欄中,用戶可見;而post提交數據,發送的數據用戶不可見

css選擇器：
  1.通用選擇器(Universal selector)：以*{}，指所有元素均適用
  2.標籤選擇器(Type selectors)：直接以標籤(元素)作為選擇器重新定義元素樣式,ex：p、div、body{}...
  3.id選擇器(ID selectors)：以#名稱開頭,具唯一性 #x{}。
  4.類別選擇器(Class selectors)：以.開頭,可重用及可同時設定多個class(中間用空格隔開) ex: .x{}
  5.屬性選擇器(Attribute selectors): 元素[屬性名] {} ex: div[title]{}
  6.群組(,)選擇器(Groups of selectors)：可同時設定不同的選擇器的樣式,中間以,逗號隔開 x,y{} (聯集)
  7.複合()選擇器：(即...又..):指定多個條件同時滿足時才會生效時使用,緊接無空格 ex: 元素.class{} (交集)
  8.後代( )選擇器(Descendant combinator)：含父子孫..後代關係,中間以空格區隔 x y {} .class(父) 元素(子) {} 嵌套時使用之
  9.子元素(>)選擇器(Child combinator)：父元素與子元素間以>區隔(限定父子關係,不含孫輩...) ex: x > y{} 有兼容性問題ie6以下no
  10.相鄰兄弟(+)選擇器：相鄰兄弟元素以 + 號區隔 ex: div + p{}  若以~區隔時則選中相鄰兄弟們(之後所有兄弟元素)
  11.偽元素選擇器(Pseudo-elements): 用來表示元素中的特殊位置ex:first-letter first-line ::after(在元素後加上內容,一般會配合使用 content 屬性) 
    ::before (在元素前加上內容,一般會配合使用 content 屬性)
  12.偽類選擇器(Pseudo-classes): :link尚未訪問過鏈結 :visited已訪問過鏈結 :hover滑鼠移入時呈現 
    :focus獲取鍵盤輸入焦點 :active 表示超鏈接被滑鼠點擊的狀態(hover和active也可以為其他元素設置)
  13.偽子元素選擇器:first-child指所有元素第一個子元素 :last-child(最後一個子元素) :nth-child(第n個)子元素
    :first-of-type指當前元素之第一個子元素
    :last-of-type
    :nth-of-type
  14.否定偽類:可為選中的元素剔除某些元素 :not(選擇器)

樣式繼承:
  1.祖先元素的樣式會被後代元素繼承
  2.並非所樣式均會被後代元素繼承,ex:背景、邊框、定位相關樣式都不會被繼承

樣式優先級:
  1.!important > 行內樣式 1000 > id選擇器 100 > 類和偽類選擇器 10 > 元素選擇器 1 > 通用選擇器* 0 > 繼承的樣式(没有優先級)
  2.當選擇器中包含多種選擇器時,需將多種選擇器的優先級相加後再作比較
  3.如果選擇器優先級相同時,則使用後面的樣式
  4.聯集的優先級是單獨計算
  5.!inportant 優先級最高,慎用!!
  6.a下的四個偽類選擇器順序:link --> :visited --> :hover --> :active  (LOVE HATE)

盒模型
  a.區分為四個部份
		1.content內容區
		2.padding內邊距
		3.border邊框
		4.margin外邊距
	b.盒子的可見寛度包含content+padding*2+border*2
	c.行內(內聯)元素：
		1.不能設置寛高,只會依文本自身大小設置寛高由左至右排列
		2.可設置邉框及水平方向內邊距(padding),但垂直方向內邊距不影響頁面佈局
		3.可設置水平方向外邊距(margin),不支持垂直方向外邉距

display:改變元素屬性
		1.inline:改成行內(內聯)元素
		2.block:改成塊級元素
		3.inline-block:改成行內塊元素-->有行內元素及塊級元素特點,可設置寛高,但不會獨佔一行,ex:<img>
		4.none：不顯示且元素不佔位
		5.visibility:可用來設置元素的顯示(visible默認值)和隠藏(hidden),不顯示但會佔位

overflow:溢出處理
	1.visible:默認值 溢出部份顯示
	2.hidden:溢出部份隠藏不顯示
	3.scroll:溢出部份滾動條顯示,無論內容是否溢出均會出現滾動條
	4.auto:依需求自動添加滾動條
塊級元素
	1.可設置寛高,未設置時默認寛度為auto(為父元素的100%),當指定內邊距時不會影響可見椢的大小,且會自動修改文本寛度
	2.默認高度被文本內容撐開
	3.獨佔一行,由上到下排列
行內元素:
	1.不可會獨佔一行,且寛高依文本自身大小設置由左至右排列

float:浮動
  1.使元素浮動,脫離文檔流,位置會空出來不佔位,下面的會往上排列,形成兩層布局,
  2.浮動元素上邊是一個没有浮動的塊級元素時,則浮動元素不會超過該元素,
	3.浮動的元素不會超過他上邊的兄弟元素,最多一樣高
	4.浮動的元素不會蓋住文字,文字會自動環繞在浮動元素的周圍,可利用此特性設置文字環繞圖片的效果		
	5.塊級元素浮動脫離文檔流後,高度和寛度均會被內容撐開,寛度不會再占父元素的全部
	6.內聯元素脫離文檔流後,會變成塊級元素
	7.高度塌陷問題：在文檔流中,父元素未設置高度,其高度默認會被子元素撐開,當子元素設置浮動後,
    子元素會脫離文檔流,導致父元素高度塌陷問題,且其他元素會向上移動,影響頁面佈局,雖可設置父元
    素高度,如此父元素將無法自適應子元素高度,不推薦使用此方法
    依W3C標準規範,在頁面中元素均有一個隱含的屬性BFC(Block Formatting Context),預設關閉,如
    開啟後,元素將具有下列特性:
    1.父元素的垂直外邊距不會和子元素重疊
    2.開啟BFC的元素不會被浮動元素所覆蓋
    3.開啟BFC的元素可以包含浮動的子元素
    解決方法：
    如何開啟元素的BFC
      1.設置元素浮動-會撐開父元素,但也導致父元素寛度流失(脫離文檔流),其他元素上移,不推薦使用此方法
      2.設置元素絕動定位
      3.設置元素的display:inline-block：可解決問題，但會導致寛度流失,不推薦使用此方法
      4.將元素的overflow設置為hidden是副作用最小的開啟BFC方法(推薦使用此方式)
	8.清除浮動:clear清除其他元素浮動而對當前元素產生影響
		none:不清除浮動,預設值
		left:清除左浮動對當前元素產生影響
		right:清除右浮動對當前元素產生影響
		both:清除對當前元素影響最大的元素浮動
	9.解決高度塌陷問題2:
	  可直接在高度塌陷的父元素內,添加一個空白的div,由於此div未設置浮動,所以它可以用來撐開父元素的高度
		,然後藉由清除浮動,來撐開父元素的高度,此方法無其他副作用
	10.解決高度塌陷問題3:在css中添加一個clearfix:after偽類
		可通過在元素後添加一個after偽類,內容設為空白,並將其設置為塊級元素,然後再藉由清除浮動,如此一來其
		原理就如同添加div一般(第64則範例)

定位:將指定的元素擺放到頁面任意位置,通過定位可以任意擺放元素位置(position)
  static:預設值,没有開啟定位-->開啟定位就是將position設置為非static
  relative:相對定位
    1.設置relative而未設置偏移量時,元素位置不會發生任何變化
    2.可透過left right top bottom四個屬性設置元素偏移量
      left:元素相對於其定位位置的左側偏移量
      roght:元素相對於其定位位置的右側偏移量
      top:元素相對於其定位位置的上邊偏移量
      bottom:元素相對於其定位位置的下邊偏移量
    3.相對定位是相對於元素在文檔流中原來位置進行定位
    4.相對定位的元素不會脫離文檔流(位置仍存在-->如同靈魂出巡)
    5.相對定位會使元素提升一個層級
    6.相對定位不會改變元素的性質,塊級仍是塊級,內聯還是內聯
    通常偏移量只需使用兩個偏移量就可對元素進行定位,一般選擇一個水平方向偏量和一個垂直方向的偏移量來進行定位即可
  absolute:絕對定位
    1.設置絕對定位後,會使元素脫離文檔流
    2.設置絕對定位後而未設置偏移量時,元素的位置不會發生任何變化
    3.絕對定位是相對於離他最近的開啟定位的祖先元素進行定位元,如果所有祖先元素均未開啟定位,則會相對於瀏覽器窗口進行定位
      (一般開啟子元素的絕對定位都會同時開啟父元素的相對定位)
    4.絕對定位會使元素提升一個層級
    5.絕對定位會改變元素的性質,內聯元素變成塊級元素,塊級元素的寛高默認可被內容撐開
  fixed:固定定位(也是絕對定位一種) 
    固定定位也是絕對定位的一種,具有大部份絕對定位的特性,不同點:
      1.固定定位永遠都會相對於瀏覽器窗口進行定位
      2.固定定位會固定在瀏覽器窗口某個位置,不會隨滾動條滾動
      3.IE6不支持固定定位

層級問題：
  1.如果定位元素的層級相同,則下邉的元素會蓋住上邊的元素  
  2.通過z-index屬性可用來設置元素的層級,設置正整數作為層級,值越大層級越高會優先顯示
  3.如未開啟定位之元素,不能設置z-index
  4.父元素的層級再高,也不會蓋位子元素

透明度:opacity-->介於0-1之間的值,0表示完全透明,1表示完全不透明(預設)
  在IE8及以下均不支持-->改用下列屬性
  filter: alpha(opacity=0~100);

背景設置:
  1.背景顏色:background-color: #ccc;   一般會與背景圖片一起設置,作為底色,
  2.背景圖片:background-image:url(相對路徑);  
    圖>元素-->從左上角開始顯示
    元素>圖-->圖會平舖充滿整個元素
    a.background-repeat:用於設置背景圖片是否重覆平舖
      repeat:水平垂直平舖
      no-repeat:不重覆
      repeat-x:水平方向平舖
      repeat-y:垂直方向平舖
    b.background-position背景圖片位置設置(背景圖片定位):通過此一屬性來調整圖片在元素中的位置
      預設圖片位置是貼著元素左上角顯示,
      1.使用top bottom left right center其中兩個值或一個來設置位置,先垂直再水平(類似九宮格) 
        top left  左上角      top right 右上角   top center 上中間位置
      2.使用: x y   -->x水平位置  y垂直位置  也可以是負值(任意位置使用,正值往右、往下,負值往左、往上,較彈性)
    c.background-attachment:用來設置背景圖片是否隨頁面一起滾動
      scroll:預設值
      fixed:背景圖片固定,不會隨滾動條滾動且定位永遠相對於瀏覽器窗口固定在視窗頂部,一般都設置給body,而不設置給其他元素
      
flexbox彈性布局(基本要領:align部份是指交錯軸的屬性)
一、(父)容器屬性:
    1.display:flex; inline-flex;
    2.flex-direction:決定主軸的方向 (預設:row)
      row列由左至右|row-reverse列由右至左|column欄由上至下|column-reverse欄由下至上
    3.flex-wrap:子元素換行方式(預設:nowrap)
      nowrap|wrap|wrap-reverse
      ***flex-flow: row nowrap;  是上面兩個屬性的縮寫方式
    4.justify-content:(水平對齊)資料流的對齊-主軸線的對齊
    	flex-start靠左|flex-end靠右|center置中|space-between兩端對齊|space-around平均分配對齊
		5.align-items(垂直對齊)交錯軸線的對齊-僅針對單行子物件
    	stretch預設值,依元素內容自動撐開高度|baseline以元素內容基線作為對齊基準|flex-start靠上|flex-end靠下|center置中
    6.align-content:針對多行子元素設定
      flex-start靠上|flex-end靠下|center置中|space-between兩端對齊|space-around平均分配對齊|stretch將flex項目撐開至容器的高度
  二、(子)元素屬性:
    1.flex(預設grow|shrink|basis三個屬性 0 1 auto)(auto:1 1 auto)(none: 0 0 auto)
      flex-grow:延展比，當子元素的 flex-basis 長度「小」於它自己在父元素分配到的長度，按照數字做相對應的「伸展」
                比例分配，預設值為 0，不會進行彈性變化，不可為負值，設為 1 則會進行彈性變化。
      flex-shrink:收縮比,當子元素的 flex-basis 長度「大」於它自己在父元素分配到的長度，按照數字做相對應的「壓縮」
                比例分配，預設值為 1，設為 0 的話不會進行彈性變化，不可為負值。
      flex-basis 基本比,子元素的基本大小，作為父元素的大小比較基準，預設值為0時，會以直接採用flex-grow屬性，如果設為auto，就表示子元素以自己的基本大小為單位。
    2.order(預設0)用來決定align-items位置由左至右0,1,2,3,4,5,.....
    3.align-self(預設auto)針對個別項目設定
      auto|flex-start|flex-end|center|stretch|baseline

  應用：RWD網頁|rwd image

box-sizing:
	1.預設值:content-box--(外加)
		實際寬高=width+左右padding值+左右border值
	2.border-box--(內含)
          實際寬高=width(巳包含border,padding)
	前綴:firefox-->-moz- safari-->-webkit-

grid:有點像table或畫布
	父層:(container)
	1.display:grid;
	2.grid-template-rows:(列)			grid-auto-rows:1fr;
	3.grid-template-coloumns:(欄)	grid-auto-columns:1fr;
	4.grid-area:(自訂區域名稱)				grid-row:1/2;
	5.grid-template-areas:
	grid-gap:兩欄或兩列之間的間隔
	新的單位:fr(佔份數)
	


