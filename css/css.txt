套用CSS三種方式
  1.行內樣式：只對當前元素中的內容起作用,不方便重用與維護,行內使用全局屬性style。
  2.內部樣式：只對當前頁面起作用,語法將各樣式直接編寫於<head>內的<style>中。
  3.外部連結樣式：於<head>內使用<link>連結外部css檔案,方便其他頁面重用,更可利用瀏覽器暫存區功能,提高用戶訪問速度。

塊級元素(div p h1~h6 ul ol li header nav footer...)
	1.可設置寛高,未設置時默認寛度為auto(為父元素的100%),當指定內邊距時不會影響可見框的大小,且會自動修改文本寛度
	2.默認高度被文本內容撐開
	3.獨佔一行,由上到下排列
  4.可容納行內元素及其他塊級元素,但需注意下列嵌套問題
    標籤嵌套問題:
    1.超鏈接不能嵌套超鏈接
    2.p標籤不能嵌套p標籤,文字類塊級標籤中不能放其他塊級元素
    3.標題h1-h6也不能互相嵌套

行內(內聯)元素(span a i em strong..)
	1.不會獨佔一行,不能設置寛高,且寛高依文本自身大小設置由左至右排列
	2.可設置邉框及水平方向內邊距(padding),但垂直方向內邊距不影響頁面佈局
	3.可設置水平方向外邊距(margin),不支持垂直方向外邉距
  4.行內元素能容納文本和其他行內元素,不可嵌套塊級元素

行內塊元素(img input td)
  1.不會獨佔一行,但可設置寛高,默認寛度為本身內容的寛度
  2.高度、行高、內邊距都可控制

- 凡是帶有inline的元素,都有文字特性(渡一教育姬成老師)

display:改變元素屬性
		1.inline:改成行內(內聯)元素
		2.block:改成塊級元素
		3.inline-block:改成行內塊元素-->有行內元素及塊級元素特點,可設置寛高,但不會獨佔一行,ex:<img>
		4.none：不顯示且元素不佔位
		5.visibility:可用來設置元素的顯示(visible默認值)和隠藏(hidden),不顯示但會佔位
絕對(位址)路徑:在任何情況下,都可以找得到的地址,完整位置路徑,ex:http://www.google.com/
相對(位址)路徑:以當前所在目錄為基礎,相對位址,以./表示當前目錄, ../表示跳出當前目錄到上一層目錄

form method=get or post
      get獲取數據,請求發送的數據都會寫在地址欄中,用戶可見;而post提交數據,發送的數據用戶不可見  

css選擇器：(不要大於3級)
  1.通用選擇器(Universal selector)：以*{}，指所有元素均適用,通常作為初始化標籤用
  2.元素(標籤)選擇器(Type selectors)：直接重新定義元素(標籤)樣式，ex：p、div、body{}...
  3.id選擇器(ID selectors)：以#名稱開頭,具唯一性 #x{}。
  4.類別選擇器(Class selectors)：以.開頭,可重用及可同時設定多個class(中間用空格隔開) ex: .x{}
  5.屬性選擇器(Attribute selectors):當某些標籤帶有特殊屬性的選擇器稱之為屬性選擇器 
    (1)E[attr] {} ex: div[title]{}選取屬性名為attr
    (2)E[attr=val]{}選取屬性值為val
    (3)E[attr^=val]{}選取開頭為val元素
    (4)E[attr$=val]{}選取結尾為val元素
    (5)E[attr*=val]{}選取包含有val元素
  6.複合選擇器：(自右向左順序找)
    (1)交集選擇器(即...又..):指定多個條件同時滿足時才會生效時使用,緊接無空格 ex: 元素.class{} 
    (2)并集選擇器(和..):可同時設定不同的選擇器的樣式,中間以,逗號隔開 x,y{} 集體群組選擇器(Groups of selectors)    
  7.後代( )選擇器：含父子孫..後代關係,中間以空格區隔 x y {} .class(父) 元素(子) {} 嵌套時使用之
  8.子元素(>)選擇器(Child combinator)：父元素與子元素間以>區隔(限定父子關係,不含孫輩...) ex: x > y{} 有兼容性問題ie6以下no
  9.相鄰兄弟(+)選擇器：相鄰兄弟元素以 + 號區隔 ex: div + p{}  若以~區隔時則選中相鄰兄弟們(之後所有兄弟元素)
  10.偽元素選擇器(Pseudo-elements):用來表示元素中的特殊位置  
     ::first-letter 選取第一個字 
     ::first-line 選取第一行
     ::selection 當選取文字時,可改變的樣式
     ::after(元素後加上內容,content="內容"-->必要):在盒子內部的後面插入內容 
     ::before (在元素前加上內容,content="內容"-->必要):在盒子內部的前面插入內容 
  11.偽類選擇器(Pseudo-classes)
    (1)鏈接偽類選擇器(主要針對a):注意順序問題:LV HA 
       :link尚未訪問點擊過的鏈結 
       :visited已訪問點擊過後的狀態 
       :hover滑鼠移入時呈現 
       :active表示超鏈接被滑鼠點擊時顯示的狀態(hover和active也可以為其他元素設置)
       :focus獲取鍵盤輸入焦點
    (2)結構偽類選擇器:(C3新增)
       :first-child 第一個子元素
       :last-child 最後一個子元素
       :nth-child(n) 第n個子元素
       :nth-last-child(n)從後往前數第n個子元素
       :nth-child(odd)奇數個子元素   2n+1奇數
       :nth-child(even)偶數個子元素  2n偶數
       :first-of-type指定類型第一個子元素
       :last-of-type指定類型最後一個子元素
       :nth-of-type(n)指定類型第n個子元素
    (3)目標偽類選擇器:
       :target
   12.否定偽類:可為選中的元素剔除某些元素 :not(選擇器)

透明==
  rgb(r,g,b,a) a是0~1值,設置透明度,0.1高透明,0.9低透明

陰影== shadow
  1.文字陰影:text-shadow: 水平距離 垂直距離 模糊距離 陰影顏色及透明度-->水平和垂直距離必要值,後面兩個可省略
  2.text-shadow: 1px 1px 1px #000, -1px -1px 1px #fff;凸起文字
  3.text-shadow: -1px -1px 1px #000, 1px 1px 1px #fff;凹下文孛


樣式繼承:
  1.祖先元素的樣式會被後代元素繼承
  2.並非所樣式均會被後代元素繼承,ex:背景、邊框、定位相關樣式都不會被繼承

樣式優先級:(選擇器選擇的範圍越小越精確,優先級越高)
  1.!important > 行內樣式 1000 > id選擇器 100 > 類、屬性、和偽類選擇器 10 > 元素和偽元素選擇器 1 > 通用選擇器* 0 > 繼承的樣式(没有優先級)
  2.當選擇器中包含多種選擇器時,需將多種選擇器的優先級相加後再作比較
  3.如果選擇器優先級相同時,則使用後面的樣式
  4.聯集的優先級是單獨計算
  5.!inportant 優先級最高,慎用!!
  6.a下的四個偽類選擇器順序:link --> :visited --> :hover --> :active  (LOVE HATE)

盒模型
  a.區分為四個部份
		1.content內容區
		2.padding內邊距(填充):指向一個元素的內部增加空間,會改變元素大小,隨著內邉距增加,元素會被撐大
		3.border邊框
		4.margin外邊距
	b.盒子的可見寛度包含content+padding*2+border*2
			
box-sizing:
	1.預設值:content-box--(向外擴展)
		實際寬高=width+左右padding值+左右border值
	2.border-box--(向內壓縮)
          實際寬高=width(巳包含border,padding)
	前綴:firefox-->-moz- safari-->-webkit-		

overflow:溢出處理
	1.visible:默認值 溢出部份顯示
	2.hidden:溢出部份隠藏不顯示
	3.scroll:溢出部份滾動條顯示,無論內容是否溢出均會出現滾動條
	4.auto:依需求自動添加滾動條
  
float:浮動(浮動元素在排列時,只參考前一個元素位置即可)
  1.使元素浮動,脫離文檔流,位置會空出來不佔位,下面的會往上排列,形成兩層布局,
  2.浮動元素上邊是一個没有浮動的塊級元素時,則浮動元素不會超過該元素,
	3.浮動的元素不會超過他上邊的兄弟元素,最多一樣高
	4.浮動的元素不會蓋住文字,文字會自動環繞在浮動元素的周圍,可利用此特性設置文字環繞圖片的效果		
	5.塊級元素浮動脫離文檔流後,高度和寛度均會被內容撐開,寛度不會再占父元素的全部
	6.內聯元素脫離文檔流後,會變成塊級元素
	7.高度塌陷問題：在文檔流中,父元素未設置高度,其高度默認會被子元素撐開,當子元素設置浮動後,子元素會脫離文檔流,導致父元素
		高度塌陷問題,且其他元素會向上移動,影響頁面佈局,雖可設置父元素高度,如此父元素將無法自適應子元素高度,不推薦使用此方法
    依W3C標準規範,在頁面中元素均有一個隱含的屬性BFC(Block Formatting Context),預設關閉,如開啟後,元素將具有下列特性:
    1.父元素的垂直外邊距不會和子元素重疊
    2.開啟BFC的元素不會被浮動元素所覆蓋
    3.開啟BFC的元素可以包含浮動的子元素
    解決方法：
    如何開啟元素的BFC
      1.設置元素浮動-會撐開父元素,但也導致父元素寛度流失(脫離文檔流),其他元素上移,不推薦使用此方法
      2.設置元素絕動定位
      3.設置元素的display:inline-block：可解決問題，但會導致寛度流失,不推薦使用此方法
      4.將元素的overflow設置為hidden是副作用最小的開啟BFC方法(推薦使用此方式)(解決方法1)
	8.清除浮動:clear清除其他元素浮動而對當前元素產生影響
		none:不清除浮動,預設值
		left:清除左浮動對當前元素產生影響
		right:清除右浮動對當前元素產生影響
		both:清除對當前元素影響最大的元素浮動
	9.解決高度塌陷問題2:
	  可直接在高度塌陷的父元素內,添加一個空白的div,由於此div未設置浮動,所以它可以用來撐開父元素的高度
		,然後藉由清除浮動,來撐開父元素的高度,此方法無其他副作用
	10.解決高度塌陷問題3:在css中添加一個clearfix:after偽類
		可通過在元素後添加一個after偽類,內容設為空白,並將其設置為塊級元素,然後再藉由清除浮動,如此一來其
		原理就如同添加div一般(第64則範例)
		.clear:after{
			display:block;
			content:"";
			clear:both;
		}
	11.浮動元素重疊問題:
		1.浮動元素不會覆蓋文字內容,產生文繞圖情況
		2.浮動元素不會覆蓋圖片內容(因為圖片本身也屬於文本,可將圖片視為一個特殊的文字)
		3.浮動元素不會覆蓋表單元素(輸入框、單選按鈕、複選框、按鈕、下拉選擇框等)
	
69定位:將指定的元素擺放到頁面任意位置,通過定位可以任意擺放元素位置(position)--先找參照物
  static:預設值,靜態式没有開啟定位-->開啟定位就是將position設置為非static
  relative:相對定位
    1.設置relative而未設置偏移量時,元素位置不會發生任何變化
    2.可透過left right top bottom四個屬性設置元素偏移量
      left:元素相對於其定位位置的左側偏移量
      roght:元素相對於其定位位置的右側偏移量
      top:元素相對於其定位位置的上邊偏移量
      bottom:元素相對於其定位位置的下邊偏移量
    3.相對定位是相對於元素在文檔流中原來位置進行定位
    4.相對定位的元素不會脫離文檔流(位置仍存在-->如同靈魂出竅)
    5.相對定位會使元素提升一個層級
    6.相對定位不會改變元素的性質,塊級仍是塊級,內聯還是內聯
    	通常偏移量只需使用兩個偏移量就可對元素進行定位,一般選擇一個水平方向偏量和一個垂直方向的偏移量來進行定位即可
  absolute:絕對定位 (子絕父相)
    1.設置絕對定位後,會使元素脫離文檔流
    2.設置絕對定位後而未設置偏移量時,元素的位置不會發生任何變化
    3.絕對定位是相對於離他最近的開啟定位的祖先元素進行定位元,如果所有祖先元素均未開啟定位,則會相對於瀏覽器窗口進行定位
      (一般開啟子元素的絕對定位都會同時開啟父元素的相對定位)
    4.絕對定位會使元素提升一個層級
    5.絕對定位會改變元素的性質,內聯元素變成塊級元素,塊級元素的寛高默認可被內容撐開
  fixed:固定定位(也是絕對定位一種) 
    固定定位也是絕對定位的一種,具有大部份絕對定位的特性,不同點:
      1.固定定位永遠都會相對於瀏覽器窗口進行定位
      2.固定定位會固定在瀏覽器窗口某個位置,不會隨滾動條滾動
      3.IE6不支持固定定位

層級問題：
  1.如果定位元素的層級相同,則下邉的元素會蓋住上邊的元素  
  2.通過z-index屬性可用來設置元素的層級,設置正整數作為層級,值越大層級越高會優先顯示
  3.如未開啟定位之元素,不能設置z-index
  4.父元素的層級再高,也不會蓋住子元素

73透明度:opacity可用來設置元素背景的透明度-->介於0-1之間的值,0表示完全透明(看不見了),1表示完全不透明(預設)
    在IE8及以下均不支持-->改用下列屬性:
  filter: alpha(opacity=0~100);

背景設置:
  1.背景顏色:background-color: #ccc;   一般會與背景圖片一起設置,作為底色,
  2.背景圖片:background-image:url(相對路徑,如果是外部引入CSS時要注意路徑修改);  
    	圖大小大於>元素大小-->從左上角開始顯示
    	元素>圖-->圖會平舖充滿整個元素
    	可同時為一個元素指定背景顏色和背景圖片,那麼背景顏色將會作為背景圖片的底色
    a.background-repeat:用於設置背景圖片是否重覆平舖
      - repeat:默認值,水平垂直平舖
      - no-repeat:不重覆
      - repeat-x:水平方向平舖
      - repeat-y:垂直方向平舖
    b.background-position背景圖片開始位置(左上角)設置(背景圖片定位):通過此一屬性來調整圖片在元素中的位置
            預設圖片位置是貼著元素左上角顯示,
      1.使用top bottom left right center其中兩個值或一個來設置位置,先垂直再水平(類似九宮格) 
        top left  左上角      top right 右上角   top center 上中間位置
      2.使用: x y -->x水平位置  y垂直位置  也可以是負值(任意位置使用,正值往右、往下,負值往左、往上,較彈性)(可用px或百分比)
    c.background-attachment:用來設置背景圖片是否隨頁面一起滾動
      scroll:預設值,背景圖片會隨著滾動
      fixed:背景圖片固定,不會隨滾動條滾動且定位永遠相對於瀏覽器窗口固定在視窗頂部,一般都設置給body,而不設置給其他元素
  3.簡寫:background:没有設置順序和數量的要求,未設置者使用默認值
      




