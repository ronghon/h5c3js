- Js組成
	1.ECMAScript
	2.BOM 瀏覽器
	3.DOM	document 整個文檔 從<html>到</html>結束
- 常量/字面量:確定的值 
- 變量:可改變的值,聲明變量使用var關鍵字,聲明變量時同時給變量賦值,稱為初始化,可同時定義多個變量,中間以逗號隔開。
- 標識符:用戶自定義的所有名字,ex:變量名,函數名
- 檢查數據類型使用typeof,語法:typeof 變量/常量;
- 表逹式:由運算符和操作數組成的式子
		1.功能  2.表逹式值
- 自動數類轉換:
	1.任何數據類型與字符串類型數據作相加時,其他數據類型會自動轉換為字符串類型,此時+號乃執行的是字符串拼接而非數學的相加。
		ex: var tmp="1"+1;.-->11  
	2.字符串如果是純數字字符串作+以外之運算時,則會先轉成Number,再作運算 ex: var tmp= 1-"2";-->-1 ,如果字符串為非數字時,則會得到NaN,也就是任何
		數據除了和字符串做相加運算外,與NaN做算數運算的結果都是NaN,包括NaN本身和NaN做運算結果也是NaN。
	3.任何其他數據類型除了與字符串做相加操作外,其他與數字類型做算數運算時,其他數據類均會先自動轉換為數字再相加。
		特殊轉換:		true-->1  false-->0  null-->0  undefined-->NaN
- 強制數據類型轉換
	1.Boolean()轉為布林值true false 
		a.數字0-->false 非數字0-->true
		b.空字符串-->false  非空字符串-->true
		c.null和undefined-->false
	2.Number()轉換為數值類型  
		a.true-->1  false-->0  
		b.字符串->純數字-->對應的數字,否則NaN
		c.null-->0  undefined-->NaN
		
		parseInt()兼容Number功能;取整
		parseFloat()取浮點數,帶小數的數字,可以
		1/0-->Infinity無窮大   -1/0  -Infinity負無窮大
- 一元運算符:只能操作一個值的運算符
	a++:  ++後置-->先賦值再加加 a++本身的值=自增前的值(原值)
	++a:  ++前置-->先加加再賦值 ++a本身的值=自增後的值(新值)
		
08關係運算符== !=
	在等於和不等比較上,如操作數為非數值,其規則如下:
		1.一個為布林值時,則比較前將布林值轉換為數字,true-->1  false-->0 
		2.一個操作數為字符串時則比較前將其轉成數值再比較
		3.一個操作數為NaN,則==返回false !=返回true ,NaN和NaN自身為不等
		4.在全等(===)和全不等(!==),如果值和類都相等時,才返回true,否則false
		
09邏輯運算符(與&&、或||、非!)
	與&&(找false) :只有當兩個表逹式的結果均為真時,判斷結果才為true,短路操作:只要第一個值是false,就停止,直接傳回false(第二個表逹式就不再執行),只
								有第一個值為true,才會再判斷第二個值是否為true。
	或||	(找true) :只有當兩個表逹式的結果均為假時,判斷結果才為false,短路操作:只要第一個值是true,就停止,直接傳回true(第二個表逹式就不再執行),只
								有第一個值為false,再判斷第二個值是否為false。
	非! 規則:
	 1.空字符串""-->返回true
	 2.非空字符串-->false
	 3."0"-->true
	 4.非0數值-->false
	 5.NaN-->true
	 6.undefined-->true
	 
10進制轉換
	十進制轉二進制:除二取餘,倒序排列ex:52==>110100  1*2^2 + 1*2^4 + 1*2^5 =52
	十進制轉八進制/十六進制==>先將十進制數轉成二進制,再將二進制轉成對應的八進制或十六進制
	二進制轉八進制:從右向左,每三位一組,不足三位的使用0補齊,再將每一組轉成十進制。
	ex: 110 100-->64(八進制)  -->4*8^0 + 6*8^1 =52 (十進制)
	二進制轉十六進制:從右向左,每四位一組,不足四位的使用0補齊,再將每一組轉成十進制。
	ex: 0011 0100-->34(十六進制)-->4*16^0 + 3*16^1 = 52(十進制)
	
11流程控制
	三種基本結構:
	a.順序:從上到上執行代碼就是順序
	b.分支選擇(或條件語句):根據不同的情況執行對應代碼
	c.循環:重複做一件事情
	
//判斷閏年
	if ((y % 4 == 0 && y % 100 != 0) || y % 400 == 0 ){
				alert("閏年")}
	else{
    alert("平年")}
		
	// 利用三目運算式判斷最大數;
		var num1 = 100,num2 = 30;
		var max = num1 > num2 ? num1 : num2;
		console.log(max);