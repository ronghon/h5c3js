01.原生JS的缺點:
	1.不能添加多個window.onload入口函數,如果添加多個,後面的會覆盖前面的
	2.原生JS的API名字都很長難記
	3.原生JS的代碼重覆冗餘
	4.原生JS有些屬性和方法有瀏覽器兼容性問題
	5.原生JS容錯率較低,前面的代碼出錯了,後面的代碼即無法執行
02.JQ的魅力
	1.入口函數:
	  $(document).ready(function(){})
		$(function(){})
	2.優勢:
		(1)可以設置多個入口函數
		(2)JQ的API名字較好記
		(3)JQ的代碼簡潔(隠式迭代)
		(4)JQ可兼容IE678
		(5)JQ的容錯率較高,前面的代碼出錯,不影響後面的代碼執行
03.JQ就是JS的函數庫,內封裝了很多方法和屬性,學習JQ就是學習這些方法和屬性
04.如何使用JQ?使用步驟:
	1.引入JQ文件-->script src=""
	2.入口函數-->
	3.找到要操作的元素(JQ選擇器),操作它(添加屬性、樣式、文本...等)
05.JQ官網下載JQ文件
	1.X 支持IE678  停止更新
	2.X 不支持IE678 停止更新
	3.X 不支持IE678 持續更新中
	jQuery.min.js  經過壓縮版 -->上線版  體積更小
	jQuery.js    未經過壓縮版 -->學習測試開發版
06.入口函數:
	$(document).ready(function(){})
	$(function(){})
	window.onload=function(){}與$(function(){})的區別
	1.window.onload入口函數不能寫多個,但jquery入口函數可寫多個
	2.執行時機不同:jquery入口函數比window.onload執行較快些
	  jquery入口函數要等待頁面上DOM樹加載完後執行,而window.onload要等待頁面上所有資源(DOM樹/外部CSS/JS鏈接或圖片)
		都加載完畢後執行
07.jQuery頂級對象$===jQuery
  a.引入一個JS文件,是會執行這個JS文件中的代碼
	b.jquery其實是一個自執行函數,執行這個JS文件中的代碼,其實就是執行這個自執行函數,window.jQuery=window.$=jQuery 這個自執行
	  文件就是給window對象添加一個jQuery屬性和$屬性,
	c.$其實和jQuery是等價的,是一個	函數,Object.prototype.toString.call($)-->object function
	d.$是一個函數,如果參數傳遞不同,效果也不同
		1.參數為匿名函數-->入口函數
		2.參數為一個字符串-->選擇器或創建一個標籤
		3.參數為一個DOM對象,它會將DOM對象轉換為jQuery對象
08.DOM對象與jQuery對象
	DOM對象:原生JS選擇器獲取到的對象,只能調用DOM方法和屬性,不能調用jQuery屬性和方法
	jQuery對象:使用jQuery選擇器獲取到的對象,只能調用jQuery方法和屬性,不能調用原生JS DOM對象的屬性和方法
	JQuery對象是一個偽數組,驗證方法:console.log($div1.__proto__===Array.prototype)  //false 
	jQuery對象其實就是DOM對象的一個包裝集
09.DOM對象與jQuery對象互轉
	DOM對象轉為jQuery對象-->以$()括起來就成了jQuery對象(用錢轉)
	jQuery對象轉為DOM對象-->方法有2
	 1.使用索引號  (用下標轉)
	 2.使用get()方法,get(索引號)
10.開關燈案例
11.text()方法:獲取和設置文本
	1.text()未設置參數即是獲取這個標籤所有的文本內容,包含後代元素的文本
	2.text("設置文本內容")給參數時,即是設置文本內容,注意會覆盖原來內容,如果文本中包含標籤,不會解析標籤內容
		包含了多個DOM元素的jquery對象,通過text()方法設置文本,會把所有的DOM元素都設置相同的內容(應用隠式迭代)
12.css()方法:設置/獲取樣式
	1.獲取樣式:css("樣式屬性")-->在IE瀏覽器中,如果要獲取邊框樣值,一定要給一個明確的邊框
	2.如果要獲取多個相同標籤元素的樣式,只能獲取到第一個DOM對象對應的樣式值
	3.設置樣式:css("樣式名","樣式值"),如果樣式值為數字型,則可不加引號,設置的樣式為行內樣式,可分為設置單樣式和多樣式
	4.設置多樣式:css({
		樣式名:樣式值,
		樣式名:樣式值....
  	})
		總結:設置操作時,一般均有隠式迭式,且均需給設置值,獲取時相同的元素下只獲取到第一個元素的樣式值
13.選擇器:	
16.下拉菜單案例:
	1.show()方法本質上是更新display屬性為block
	2.hide()方法是更新display屬性為none
	3.為什麼不給一級菜單中的a標籤設置鼠標移入和離開事件?因為這樣設置,會選不到二級菜單
17.mouseover和mousenter事件區別
	mouseover事件在鼠標移動到選取的元素及其子元素上時觸發
	mouseenter事件只在鼠標移動到選取的元素上時觸發-->建議使用,離開時使用mouseleave而不是mouseout
18.突出高亮顯示
	設置當前li標籤的透明度(opacity)為1,其餘兄弟li標籤透明度為.4
	css()方法有返回值,就是當前設置樣式的這個元素,是一個jquery對象,所以就可繼續點.出其他方法,鏈式編程概念
19.手風琴案例
	jQuery特性:隠式迭代、鏈式編程
	鏈式編程:一個方法返回的是一個jQuery對象時,就可繼續點出jQuery的方法來
21.添加類、移除類、判斷類、切換類
	1.添加類:addClass()-->可同時添加多個類名,原來類名不會被覆蓋會繼續存在,只是在後面添加類名
	2.移除類:removeClass()-->也可同時移除多個類名,不加參數,就是移除所有類名
	3.判斷類:hasClass()-->有這個類返回true,没有返回false
	4.切換類:toggleClass()-->如果有則移除,没有則添加
22.tab欄切換案
	index()獲取索引值
23.基本動畫:
	1.顯示隠藏:show()、hide()、toggle()未設置參數代表無動畫
		(1)參數1:執行動畫時間--可給normal(400) fast(200毫秒) slow(600) 或毫秒數,如果代表時長的
		        參數名寫錯了,就相當寫了一個normal
		(2)參數2:回調函數function(){}
	2.滑入滑出:slideDown()、slideUp()、slideToggle()參數與上面相同
	3.淡入淡出:fadeIn()、fadeOut()、fadeToggle()、fadeTo()-->改變opacity透明度從0到1
		fadeTo:淡入或淡出到某一個透明度(時長,透明度)
28.自定義動畫:animate()4個參數
	1.參數1:必選,改變動畫的對象(需要作動畫的屬性)
	2.參數2:可選,執行動畫時長
	3.參數3:可選,swing(慢快慢,預設) linear(勻速)
	4.參數4:動畫執行完畢後的回調函數function(){}
29.右下廣告消失案例
30.動畫隊列和停止動畫:在同一元素上執行多次動畫時,後面的動畫會被放到動畫隊列中,等待前面的動畫執行完成了才會執行,可透
   過stop()方法停止動畫
	 stop()第1個參數是否清除隊列,第2個參數是否跳轉到最終效果
	 (true,true)-->
	 (true,false)-->立即停止不跳轉
	 (false,false)-->不跳轉也不清除隊列(預設)
	 (false,true)-->不清除隊列但跳轉到最後
31.動態創建元素節點:
  1.原生JS創建節點方式:document.write()會覆蓋原來內容; innerHTML ; document.createElement()要配合appendNode;
  2.jQuery創建節點方式:html(); $();
    使用html():可用來設置或獲取內容
      (1)不加參數時時可獲取元素的所有內容
      (2)加參數時即是設置內容,但需注意設置的內容會覆蓋原有內容,如果設置的內容包含標籤,會把標籤解析出來 ex: html('新設置的內容')
    使用$()創建節點:創建的元素只存在於內存中,如需在頁面中顯示出來需使用append添加到頁面中
32.表格生成案例		
33.添加節點:
  1.父元素.append(子元素):把子元素作為父元素的最後一個子元素添加,相當於原生JS中的appendChild
  2.父元素.prepend(子元素):把子元素作為父元素的第一個子元素添加
  3.元素A.before(元素B):把元素B插入到元素A的前面,作為兄弟元素添加
  4.元素A.after(元素B):把元素B插入到元素A的後面,作為兄弟元素添加
  5.子元素.appendTo(父元素):把子元素作為父元素最後一個子元素添加
34.城市選擇案例:appendTo
	過濾被選中項目:selected
35.清空元素、移除元素
	1.清空元素:僅清空元素內容
		(1)html("")不推薦使用,有可能造成內存洩漏,不安全
		(2)empty()推薦使用
	2.移除元素:remove()自殺,會連同元素一起移除
36.表格刪除案例
37.clone()克隆節點:只存在內存中,如要在頁面中顯示,就要使用append追加到頁面上,clone()參數為布林值,不論是true或false
   都會克隆到後代節點,如為true表示會把事件一起克隆到新的元素上,如為false,就不會克隆事件,未加參數默認為false 
38.val()為表單元素設置或獲取表單元素的值
	1.未給參數時即為獲取表單元素的value值
	2.給參數值即為設置
39.動態添加數據和刪除數據
40.jQuery屬性操作:attr()、removeAttr()
	1.設置單個屬性 attr("屬性名","屬性值"),如原有此一屬性則為修改屬性值,也可以修改自定義屬性,如果原來没有此一屬性,則為
	  添加屬性名及屬性值
	2.設置多個屬性:使用對象方法 attr({
		src:"屬性值",
		aaa:"哈哈",
		bbb:"新設置的屬性"
  	})
	3.獲取屬性:attr("屬性名")即可獲取屬性值,可獲取元素自帶屬性和自定義屬性
	4.移除屬性:removeAttr("屬性名")可移除元素自帶屬性和自定義屬性
		移除多個屬性:removeAttr("屬性名1 屬性名2 屬性名3")
41.美女相冊案例
	1.阻止a標籤頁面跳轉: return false
42.prop():獲取或設置元素自帶(內置)屬性
	jquery1.6以後,checked selected disabled等boolean類型的屬性,不可使用attr(),無論是選中或未選中,均返回undefined,
	因此欲獲取此類屬性,改使用prop()
43.全選與全不選案例
44.尺寸寛高:width()、height()
	1.利用css()方法獲取到的寛高為字符串型.css("width")、.css("height")
	2.利用width()、height()獲取到的寛高為數字型 .width() 、.height()
	3.可設置或獲取寛高,但不包括內邊距、邊框和外邊距
	4.要包含內邊距(padding)使用innerWidth()和innerHeight()
	5.要包含padding和border的寛高時使用outerWidth()和outerHeight()
	6.要包含padding和border和margin的寛高時使用outerWidth(true)和outerHeight(true)
	7.要獲取網頁的可視區寛高使用$(window).width()、$(window).height()

45.offset()可獲取到一個對象,元素距離document的top和left值
  position()可獲取元素距離相對于其最近帶有定位的父元素(offsetParent)的位置

46.scrollTop()、scrollLeft()設置或獲取元素內容被捲曲出去的寛高
  $(window).scrollTop()設置或獲取頁面被捲曲出去的高
	$(window).scrollLeft()設置或獲取頁面被捲曲出去的寛

47.固定導航欄案例
	给页面设置一个滚动事件:$(window).scroll(function(){})

48.事件
	1.原生JS注冊相同的事件,後面的事件會把前面的事件覆蓋掉
	2.jquery給同一個元素注冊相同的事件時,後面的不會把前面的覆蓋掉
	jq
	uery1.7以後改以on()來綁定注冊事件

49.on()
 1.on()簡單注冊事件-->不支持動態注冊　on("click",function(){})
 2.on()注冊事件委托-->$(selector).on("click","span",function(){})
	 表示給$(selector)綁定代理事件(事件冒泡),當必須是它的內部元素span才能觸發這個事件,支持動態綁定注冊