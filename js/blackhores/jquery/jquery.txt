108.11.25
01.jquery概述:
  (1)JS庫:即library,是一個封裝好的特定集合(方法和函數),從封裝一大堆函數的角度理解庫,就是在這個庫中,封裝了很多預先定義好的
	   函數在裏面,如動畫animate、hide、show,如獲取元素等。
     簡單理解:就是一個JS文件,裏面對我們原生JS代碼進行了封裝,存放到裏面,這樣我們可以快速高效的使用這些封裝好的功能,jQuery
		 就是為了快速方便的操作DOM,裏面基本都是函數(方法)。
     常見的JS庫jQquery、Prototype、YUI、Dojo、Ext JS 、移動端的zepto,這些庫都是對原生JS庫進行封裝,內部都是用JS實現的
  (2)jQuery是一個快速、簡潔的JS庫,設計宗旨是"write Less,Do More",提倡寫更少的代碼,做更多的事。
     1.J就是JS;Query查詢,意思就是查詢JS,把JS中的DOM操作做了封裝,讓我們可以快速的查詢使用裏面的功能
     2.jQuery封裝了JS常用的功能代碼,優化了DOM操作、事件處理、動畫設計和Ajax交互,學習jQuery的本質就是學習調用這些函數(方法)
     3.jQuery出現的目的是為了加快前端人員的開發速度,讓我們可以非常方便的調用和使用它,從而提高開發效率。
03.jQuery的優點:
	(1)輕量級,核心文件才幾十KB,不會影響頁面加載速度
	(2)跨瀏覽器兼容,基本兼容了現在主流的瀏覽器
	(3)鏈式編程、隠式迭代。
	(4)對事件、樣式、動畫支持,大大簡化了DOM操作
	(5)支持插件擴展開發,有豐富的第三方插件,如樹形菜單、日期控件、輪播圖等
	(6)免費開源
04.jQuery基本使用 
  版本:
  1.1X:兼容IE678等低版本瀏覽器,但官網已不再更新
  2.2X:不兼容IE678等低版本瀏覽器,但官網已不再更新
  3.3X:兼容IE678等低版本瀏覽器,是官網目前主要更新維護的版本
  使用步驟:
  1.引入jquery文件:利用<script src="路徑"></script>;
  2.加載引用入口函數:等著DOM結構渲染完畢即可執行內部代碼,不必等到所有外部資源加載完成,jquery完成了封裝,相當於原生JS中的
	  DOMContentLoaded,不同於原生JS中的load事件是等頁面文檔,外部JS文件,css文件、圖片均加載完畢才執行內部代碼
		$(function(){
			...   //頁面DOM加載完成的入口
		})
		$(document).ready(function(){
			...   //頁面DOM加載完成的入口
		})
05.jquery的頂級對象$
  1.$是jquery的別稱,在代碼中可以使用jquery代替$,但一般都直接使用$
  2.$是jquery的頂級對象,相當於原生JS中的window,把元素利用$包裝成jquery對象,就可以調用jquery的方法

06.jquery對象和DOM對象
  1.用原生JS獲取來的對象就是DOM對象
  2.用jquery方法獲取的元素就是jquery對象
  3.jquery對象的本質是利用$對DOM對象包裝後產生的對象(偽數組形式存儲)
  4.jquery對象只能使用jquery方法,DOM對象則使用原生JS的屬性和方法

07.DOM對象和jquery對象之間是可以互相轉換的
  因為原生JS對象的內容和範圍比jquery對象大,原生JS中的某些屬性和方法,jquery並没有封裝,如要使用這些
	jquery没有封裝的屬性和方法時,需把jquery對象轉換為DOM對象才能使用,如video中的play屬性,jquery
	並没有封裝
  1.DOM對象轉換為jquery對象:使用$(DOM對象) DOM-->jQuery 用$轉
	  (1)直接獲取使用$包裝,ex:$("元素")即可得到jquery對象,需加引號。
	  (2)使用原生JS獲取DOM對象後,需轉換為jquery對象,使用$(myvideo),不需加引號
		   但某些DDM方法jquery不支援,所以$(DOM對象).play()會報錯,需轉換為原生DOM才能使用。
  2.jquery對象轉換為DOM對象(兩種方式)
	  (1)$("元素")[index]  index是索引號
	  (2)$("元素").get(index)  index是索引號

08.jquery常用API
	1.常用jquery選擇器
	2.操作jquery樣式
	3.常用jquery動畫
	4.操作jquery屬性
	5.操作jquery元素
	6.操作jwuery元素尺寸、位置

09.jquery選擇器-->用來獲取元素,CSS怎麼寫,jquery就怎麼寫
	原生JS獲取元素的方法很多,兼容性也不一致,jquery封裝,使獲取元素統一標準
	語法: $('選擇器')  //裏面選擇器直接寫CSS選擇器即可,但要加引號'',偽數組形式存儲
  1.基本選擇器
    $("#id")        -->id選擇器
    $(".class")     -->類選擇器
    $("*")          -->通配符選擇器
    $("div")        -->元素選擇器
    $("div,p,li")   -->并集選擇器
    $("li.current") -->交集選擇器
  2.層級選擇器
	  $("ul>li")  -->子代選擇器  以">"連結
	  $("ul li")  -->後代選擇器  以空格連結

10.隠式迭代:遍歷內部DOM元素的過程(以偽數組形式存儲),簡單理解:給匹配到的所有元素進行遍歷循環,執行相應的方法,而不用我們再進行for循
   環遍歷數組,簡化操作,方便調用
   jquery樣式(設置或修改)方式:  
   語法:  $('div').css('屬性','值')

11.篩選選擇器
   $("E:first")     獲取第一個元素
   $("E:last") 　   獲取最後一個元素
   $("E:eq(index)") 選擇索引號為index的元素,索引號從0開始 
   $("E:odd")       選擇索引號為奇數的元素
   $("E:even")      選擇索引號為偶數的元素
	 $("E:gt(index)") 選擇大於index的元素 
	 $("E:lt(index)") 選擇小於index的元素
	 $("E:not(選擇器)")選擇排除某一元素以外的元素

12.篩選方法
  (1)找父級:  parent()                   $("li").parent()       返回最近一級的父級(親爸爸)
						 parents("name") -->獲取所有祖先元素,用來查找多層父級時指定特定名稱的父級
  (2)找子級:  親兒子 children(selector)   $("ul").children("li") 相當於$("ul>li")最近一級(親兒子) 類似子代選擇器
             子孫輩 find(selector)       $("ul").find("li")     相當於$("ul li") 類似後代選擇器
  (3)找兄弟節點:siblings(selector)  除了自身元素之外的所有兄弟節點    siblings兄弟姐妹們	
	             nextAll()           查找當前元素之後的所有同輩元素
							 next()							 查找下一個兄弟
			         prevtAll()          查找當前元素之前的所有同輩元素
							 prev()							 查找上一個兄弟
	(4)找特定元素(找第N個元素):eq(index)
		 1.利用選擇器方式選取特定元素-->:eq(index) -->寫在元素後面 ex:$("ul li:eq(2)")
		 2.利用篩選方法選取特定元素-->.eq(index)   -->寫在外面 ex:$("ul li").eq(2)-->推薦使用
	(5)判斷是否含有某個特定的類名,如果有則返回true  --> hasClass(class)	
	(6)同級篩選:filter('選擇器或標籤元素')		

13.下拉菜單
	鼠标经过mouseover    鼠标离开 mouseout
	$(this) jQuery 当前元素  this不要加引号
	show() 显示元素  hide() 隐藏元素

15.jquery的排他思想:多選一效果,當前元素設置樣式,其餘兄弟清除樣式,主要使用隠式迭代
	1.隱式迭代,給所有的按鈕都綁定點擊事件
	2.為當前的元素改變背景顏色$(this).css("background","red");
	3.其餘的兄弟去掉背景顏色$(this).siblings("button").css("background","");

16.淘寶tab切換案例
	核心原理:鼠標經過左側盒子某個小li,就讓內容區盒子相應圖片顯示,其餘的圖片隠藏。
	獲取當前元素的索引號:$(this).index();	

17.鏈式編程:是為了節省代碼,將重復的部份以鏈式方串接起來如鏈子一般,使用鏈式編程時一定要注意是為那個對象執行樣式

18.jQuery樣式操作:
 1.操作CSS方法:jquery可以使用CSS方法來修改簡單元素樣式,也可以操作類,進行多個樣式修改
	(1)獲取屬性值:參數只寫屬性名,則返回屬性值
		$(this).css("color");-->返回color顏色值
	(2)設置樣式:參數是屬性名,屬性值,並以逗號分隔,屬性名必須加引號,值如果是數字可以不用加單位和引號
		$(div).css("color","red");
		$(div).css("width",300);
	(3)參數可以是對象形式,方便設置多組樣式,屬性名和屬性值用冒號隔開,屬性名可以不用加引號
		如果是複合屬性則必須採取駝峰命名法  如backgroundColor, 如果值不是數字,則必須加引號
		$("div").css({
			width:400,
			height:400,
		  backgroundColor:"red"
		})
 2.設置類樣式方法：作用等同於之前的classList,可以操作樣式，注意操作類中的參數不要加點
	(1)添加類：addClass("類名")   $("div").addClass("current")  不用加點
	(2)刪除類：removeClass("類名")
	(3)切換類：toggleClass("類名")  -->可添加類名與移除類名切換

20.tab切換案例(選項卡)
	切換原理:當點擊當前li時,下面相應的div內容會顯示
	1.點擊上面的li,當前li添加某一類名,其餘兄弟li移除類
	2.點擊同時,得到當前li的索引號
	3.讓下面相應索引號的item內容顯示,其餘的隠藏
3.類操作和className區別
	1.原生JS中className會覆蓋元素原先裹面的類名
	2.jquey裹面類操作只是對指定類進行操作,不影響原先的類名,addClass相當於追加類名而非替代類名;
	  remove也只是針對指定類名進行移除,並不影響原先類名	

22.jquery動畫效果:
  1.顯示隠藏:show()、hide()、toggle()
	2.滑動:slideDown()、slideUp()、slideToggle()
	3.淡入淡出:fadeIn()、fadeOut()、fadeToggle()、fadeTo()
	4.自定義動畫:animate()
	show([speed],[easing],[fn])  hide()  toggle()
	  顯示(隠藏)參數說明:
		1.參數均可省略,表示無動畫直接顯示
		2.speed:顯示的速度,slow normal fast或直接給毫秒數
		3.easing:指定切換效果,默認swing(慢快慢)或linear(等速)
		4.fn:回調函數,在動畫完成時執行的函數,每個元素執行一次

23.事件切換:hover([over],out),就是鼠標經過和離開的複合寫法
	1.over:鼠標移到元素上觸發的函數(相當於mouseenter)
	2.out:鼠標移出元素觸發的函數(相當於mouseleave)
	3.如果只寫一個函數,那麼鼠標經過和鼠標離開都會觸發這個函數時使用slideToggle()
	  $(".nav>li").hover(function() {
	    $(this).children("ul").slideToggle();
	  });

24.動畫或效果隊列:動畫或效果一旦觸發就會執行,如果多次觸發,就造成多個動畫或效果排隊執行。
	 使用stop()停止排隊,此方法用於停止動畫或效果,需注意:stop()要寫到動畫或效果前面,相當於停止結束上一次的動畫

25.淡入淡出效果:fadeIn()  fadeOut()  fadeToggle()  fadeTo()
	 利用漸進方式調整到指定的不透明度fadeTo()
	 fadeTo(speed,opacity,[easing],[fn]),其中opacity透明度必須寫,取值0-1之間,speed必須寫
	 高亮顯示案例:
	 1.鼠標移入時,其他的li透明度為0.5
	 2.鼠標離開時,其他的li透明度為1

26.自定義動畫animate()
	 語法: animate(params,[speed],[easing],[fn])
	 1.params:要修改的樣式屬性,以對象形式傳遞,必須寫,屬性名可以不加引號,如果是複合屬性需採用駝峰命名法,其餘參數都可省略
	 2.其餘三個參數可省略,意義與用法和前面幾個相同

27.王者榮耀手風琴案例
	1.鼠標經過某個小li時有兩步操作:
		(1)當前小li寛度變為224px,同時里面的小圖片淡出,大圖片淡入
		(2)其餘兄弟小li寛度變為69px,小圖片淡入,大圖片淡出

29.jquery屬性操作
	1.設置或獲取元素固有屬性值prop()
		所謂元素固有屬性就是元素本身自帶的屬性,比如<a>元素中的href <input>元素中的type
		(1)獲取屬性值:E.prop("屬性名")
		(2)設置或修改屬性值:prop("屬性","屬性值")
		change(function(){})input  checkbox 發生改變時
	2.設置或獲取元素自定義屬性值attr(),也可獲取H5自定義屬性data-開頭的自定義屬性
	  (1)獲取屬性值:E.attr("屬性名")類似原生getAttribut()
	  (2)設置或修改屬性值:attr("屬性","屬性值")類似原生setAttribute()
	3.數據緩存data():此方法可以在指定的元素上存取數據,並不會修改DOM元素結構,一旦頁面刷新,之前存放的收都將被移除
		這個裏面的數據是存放元素的內存裏面,這個方法也可以獲取data-index h5自定義属性與attr()方法區別:
		(1)不用再寫data-  
		(2)返回的是數字型

30.購物車全選與全不選案例
	1.選中狀態(checked)
	2.checked是複選框的固有屬性,需利用prop()方法獲取和設置該屬性
	3.小li的複選框選中狀態與全選按鈕狀態相同

31.判斷所有小li是否全選中,如為true時則全選按鈕狀態跟著改變
	1.如果小複選框被選中的個數等於全部小li個數時,則全選按鈕被選中,否則不選中
	2.利用:checked篩選選擇器
	3.所有小複選框的個數$(.j-checkbox).length
	4.被選中的小複選框的個數$(j-checkbox:checked).length

32.jquery內容文本值:主要針對元素的內容還有表單的值進行操作
	1.普通元素內容html()-->(相當於原生innerHTML)
		html()-->獲取元素+文本內容,包含標籤
		html("內容")-->設置元素的內容
	2.普通元素文本內容text()-->(相當於原生innerText)
		text()-->只獲取文本內容,不含標籤
		text("內容")-->設置或修改文本內容
	3.表單的值val()-->(相當於原生value)
    val()-->獲取表單中的value值
		val("內容")-->設置或修改表單值

33.購物車案例模塊-增減商品數量
	核心:先聲明一個變量,當點擊+號(increment),就讓這個值++,然後賦值給文本框
	  注意點1:只能增加該商品的數量,也就是當前+號的兄弟文本框(itxt)的值,修改表單值的方法是val()
		注意點2:這個變量初始值是這個文本框的值,在這個值的基礎上++,要獲取表單的值

34.購物車案例-修改商品小計

35.parents()可以返回所有祖元元素,parents("選擇器")可以返回指定類名的祖先元素
	 toFixed(n)方法可以保留n位小數

36.如果用戶直接修改表單中的值時,小計需重新計算
	1.先獲取文本框中的值 再乘以 當前商品的單價 
	2.再將乘出來的結果修改小計中的值

37.jquery元素操作:主要是遍歷、創建、添加、刪除元素操作
	1.遍歷(each):jquery隠式迭代是針對同一類元素做了同樣的操作,如果想要給同一類元素做不同操作時,就要使用遍歷each()方法
		語法: .each(function(index,domEle){xxx;})  遍歷DOM對象時使用
		(1)each方法遍歷匹配的每一個元素,主要用DOM處理,each每一個
		(2)裏面的回調函數有二個參數:
			index是每個元素的索引號可以自行指定名稱如i或index;
			domEle是每個DOM元素對象,不是jquery對象,可以自行指定名稱
		(3)想要使用jquery方法,需要給這個dom元素轉換為jquery對象$(domEle)

38.另一種遍歷方法:主要用於處理數據
	語法: $.each(遍歷對象,function(index,element){xxx;})
  1.使用$.each()方法可用於遍歷任何對象,主要用於數據處理,如數組、對象
	2.函數中有2個參數:index是每個元素的索引號;element是遍歷DOM對象
	
40.元素創建、添加、刪除
	1.動態創建元素:$("<li></li>");
	2.添加元素:
		(1).內部添加元素:生成之後,它們是父子關係
			E.append(li)-->把內容放到匹配元素內部最後面,類似原生JS的appendChild
			E.prepend(li)-->把內容放到匹配元素內部最前面	
		(2).外部添加元素:生成之後,它們是兄弟關係
			E.after(div)-->把內容放到目標元素後面  
			E.before(div)-->把內容放到目標元素前面 
	3.刪除元素
		(1)直接刪除匹配的元素(自殺):$(目標元素).remove()	
		(2)刪除匹配的元素集合中所有的子節點(清空),本身元素並不刪除:E.empty()
		(3)清空匹配的元素內容(與empty作用相同):E.html("")

41.刪除商品模塊
	1.商品後面的刪除按鈕
	2.刪除選中的商品
	3.清空購物車,即刪除全部商品

42.選中商品添加背景
	於CSS中先寫好類名及欲添加的背景顏色,然後再addClass和removeClass即可

43.jquery尺寸和位置操作
	1.尺寸:
		(1)width()/height()-->可獲取或設置匹配元素的寛度和高度,只算元素本身的width/height
		(2)innerWidth()/innerHeight()-->可獲取或設置匹配元素的寛高值包含padding
		(3)outerWidth()/outerHeight()-->可獲取或設置匹配元素的寛高值包含padding、border
		(4)outerWidth(true)/outerHeight(true)-->可獲取或設置匹配元素寛高值包含padding、border、margin
		以上參數為空,則是獲取相應值,返回的是數字型
		如果參數為數字,則是修改相應值,不用加單位
	2.位置:獲取元素的偏移,有offset()、position()、scrollTop()/scrollLeft()三種方法
		(1)offset():設置或獲取元素偏移,用來設置或返回被選元素相對於文檔的偏移坐標,跟父級没有關係(與定位無關)
			 該方法有兩個屬性:offset().top頂部距離,offset().left左側距離,並可利用offset({top:50,left:50})設置或修改元素的偏移位置
		(2)position():獲取元素偏移,用於返回被選元素相對於帶有定位的父級偏移坐標,如果父級都没有定位,則以文檔為準
       這個方法只能獲取偏移量不能設置
		(3)scrollTop()/scrollLeft():用來設置或獲取元素被捲去的頭部和左側的距離
			 頁面滾動事件:$(window).scroll(function(){})
			 獲取文檔滾動被捲去的距離$(document).scrollTop()
			 返回頁面頂部$("body,html").stop().animate({   只有元素才能作動畫,不可使用document
				            scrollTop:0;
										});	
47.品優購電梯導航

52.jquery事件
	1.常見4種注冊事件
	2.on綁定事件
	3.事件委派的優點及方式
	4.綁定事件及解綁事件
53.事件注冊
	1.單個事件注冊:E.事件(function(){}),事件如mouseover mouseout change blur focus keydown resize scroll等
	2.一個或多個事件的事件處理函數:語法--E.on(events,[selectors],fn) 
		
	優勢1:可以綁定多個事件,多個事件處理程序
		(1)events:事件源,可以一個或多個事件以事件對象方式綁定多個事件
				{mouseover:function(){
						$(this).css("background","skyblue")
				},
				click:function(){
					$(this).css("background","purple")
				},
				mouseleave:function(){
					$(this).css("background","blue")
				}i
				如事件處理程序相同者可以使用:以空格分隔
				$("div").on("mouseenter mouseleave",function(){
					$(this).toggleClass("current");
				});
		(2)selector:元素的子元素選擇器
		(3)fn:回調函數,即綁定在元素身上的偵聽函數
54.優勢2:事件委派(託):把原來加給子元素身上的事件綁定在父元素身上,就是把事件委派給父元素
			$("ul").on("click","li",function(){  //click事件綁定在ul父元素身上,但觸發對象是子元素小li
				})
	 優勢3:click()方法無法為動態創建的元素綁定事件,但on()方法可以為未來動態創建(生成)的元素綁定事件

55.微博發布案例		

56.事件解綁off():可移除通過on()方法添加的事件處理程序,()內未加參數,代表解綁所有事件,如加參數,代表僅解綁特定事件
   解綁事件委託$("ul").off("click","li");
	 如果有的事件只想觸發一次,可使用one()方法來綁定事件

57.自動觸發事件:trigger()有些事件希望自動觸發,比如輪播圖自動播放功能跟點擊右側按鈕一致,可利用定時器自動觸發右側按鈕點擊事件
    ,不必鼠標點擊觸發
	 (1)第一種簡寫形式:元素.事件() 刷新頁面自動調用該函數 --> E.click() 
	 (2)第二種自動觸發模式:元素.trigger("事件")
		  $("div").trigger("click");
	 (3)第二種自動觸發模式:元素.triggerHandler("事件")-->最大區別:不會觸發元素的默認行為
       $("div").triggleHandler("click");

58.jquery事件對象:事件被觸發,就會有事件對象產生
	E.on(events,[selector],function(event){})
	event就是事件對象,如阻止默認行為event.preventDefault()或return false 阻止冒泡行為event.stopProgation()

59.jquery其他方法
	1.jquery對象的拷貝方法
	2.jquery多庫共存的2種方法
	3.常用的jquery插件

60.jquery對象拷貝:如果想要把某個對象拷貝(合併)給另外一個對象使用,可使用$.extend()方法
	語法: $.extend([deep],target,object1,[objectN])
	說明:1.deep:如果設為true為深拷貝,默認為false淺拷貝
				淺拷貝是把原來對象中的複雜數據類型中的地址拷貝給目標對象,修改目標對象會影響被拷貝對象
				深拷貝(前面加true),完全克隆(拷貝的對象而不是地址),修改目標對象不會影響被拷貝的對象
				把原來的數據完全複制一份給目標對象,如果裏面有不衝突的屬性會合併到一起
			2.target:要拷貝的目標對象
			3.object1:待拷貝到第一個對象的對象(拷貝來源)

61.多庫共存:jquery使用$作為標識符,隨著jquery的流行,其他js庫也會用$作為標識符,這樣一起使用會引起衝突,如何讓jquery和其他js庫不
   存在衝突,可以同時存在,這就叫做多庫共存
	 解決方案:
	 1.如果是$符號衝突,可將$符號統一改為jQuery,如jQuery("div")
	 2.讓jQuery釋放對$標識符的控制權,由用戶自己決定使用何種符號或名字
	   var qq=$.noConflict();  以qq取代$標識符

62.jquery插件
	jQuery功能有限,想要更複雜的特效效果,可借助jQuery插件來完成。
	注意:這些插件是依賴jQuery來完成的,所以須先引入jQuery文件,所以稱之為jQuery插件
	1.jQuery插件常用網站:
		(1)jQUery插件庫 http://www.jq22.com/
		(2)jQuery之家 http://www.htmleaf.com/
	2.jQuery插件使用步驟:
		(1)引入相關文件(jQuery及js和css文件)
		(2)複製相關html、css、js(調用插件)

63.圖片懶加載:當頁面滑動到可視區域,再顯示圖片-->圖片使用延遲可提高網頁下載速度,減輕服務器負載
	EasyLazyload.js	
	使用jQuery插件庫EasyLazyload時,需注意:JS引入文件和調用必須放到DOM元素(圖片)的最後面

64.全屏滾動插件(fullpage.js) gitHub: https://github.com/alvarotrigo/fullPage.js  特色:無滾動條,利用滑鼠滾輪向下滑動滾動頁面
	 中文翻譯網站: http://www.dowebok.com/demo/2014/77/

65.bootstrap框架
66.bootstrap  JS插件

李南江jquery和ajax
04.jquery入口函數寫法:
	1.$(document).ready(function(){})
	2.jQuery(document).ready(function(){})
	3.$(function(){})-->推薦 符合write less,do more
	4.jQuery(function(){})	

05.jQuery衝突問題:頂級對象$與其他JS文件$使用衝突
	1.解決方案1:釋放$的使用權
		jQuery.noConflict();  //注意:釋放操作必須在編寫其它jQuery代碼之前編寫,釋放之後就不能再使用$符號,改為jQuery
	2.解決方案2:自定義頂級對象取代$
			var @ = jQuery.noConflict();
			入口函數變成: @(function){}

06.jQuery核心函數:  $()-->代表調用jQuery的核心函數;
	根據()設定內容不同,產生不同的意義和作用
	1.函數:function(){}-->入口函數
	2.字符串
		(1)選擇器 $("div") 或 $(".box") $("ul li")-->返回jQuery對象,對象保存了找到的DOM元素
		(2)代碼片段:創建標籤元素 $(<li>我是新創建的li</li>);-->返回jQuery對象,對象保存了創建的DOM元素
	3.DOM元素: $(DOM元素) -->jQuery對象   即DOM對象轉換為jQuery對象,

07.jQuery對象:是一個偽數組(有0到length-1的屬性且有length屬性)

08.靜態方法:直接添加到類上面的就是靜態方法,特性:靜態方法通過類名來調用
	 實例方法:直接添加到類的原型,首先創建一個實例(對象),特性:通過類的實例來調用

09.each()方法
	1.原生forEach方法
	  forEach(function(value,index))
		第一個參數:遍歷到的元素
		第二個參數:當前遍歷到的索引
		注意點:原生的forEach()方法只能遍歷數組,不能遍歷偽數組

	2.利用jquery中的each方法
		$.each(arr,function(index,value){
		})
		第一個參數:當前遍歷到的索引
		第二個參數:遍歷到的元素
		注意點:jquery封裝的each()方法可遍歷數組和偽數組
		
10.map()方法
	1.原生JS中的map()方法和原生forEach()方法一樣無法遍歷偽數組
		arr.map(function(value,index,array){})
	2.和jquery中的each()方法一樣,也可以遍歷偽數組
		$.map(arr,function(value,index){})
		第一個參數:要遍歷的數組
		第二個參數:每遍歷一個元素之後執行的回調函數
			(1)參數1:遍歷到的元素
			(2)參數2:遍歷到的索引
	3.和each方法的區別:
		(1)each方法默認的返回值是遍歷誰就返回誰,而map方法默認的返回值是一個空數組
		(2)each方法不支持在回調函數中對遍歷的數組進行處理(如加減運算),而map方法可以在回調函數中通過return對遍歷的
		   數組進行處理,然後生成一個新的數組返回

11.其他靜態方法trim(),isWindow(),isfunction
	1.trim():去除字符串兩側的空格,參數:需要去除空格的字符串,返回值是去除空格之後的字符串
	2.isWindow():用來判斷傳入的對象是否是window對象,返回值true/false
	3.isArray():用來判斷傳入的對象是否是真數組,返回值true/false
	4.isFunction():用來判斷傳入的對象是否是函數,返回值true/false
		jquery框架本質上一個立即執行函數

12.holdready():暫停/回復入口函數執行
	holdready(true) 暫停ready執行 ,入口函數會在dom元素加載完執行,使用此一方法可先暫停執行入口函數中的代碼
	holdready(false) 回復ready執行

13.簡化vscode操作
	setting-->user snippets	-->將snippets generator	產生的代碼copy貼上-->在欲輸入的代碼處輸入jq即可

14.jquery內容選擇器:
	1. :empty --> 作用:找到既没有文本內容也没有子元素的指定元素
	2. :parent -->作用:找到有文本內容或有子元素的指定元素
	3. :contains('文本內容')-->作用:找到包含指定文本內容的指定元素
	4. :has('選擇器')  -->作用:找到包含指定子元素的指定元素

15.屬性和屬性節點(JS DOM操作)
	1.什麼是屬性?
		對象身上保存的變量就是屬性
	2.如何操作屬性?
		設置:對象.屬性名稱=值;  對象["屬性名稱"]=值
		獲取:對象.屬性名稱     對象["屬性名稱"]
	3.屬性節點:在編寫HTML代碼時,在HTML標籤中添加的屬性就是屬性節點,在瀏覽器中找到span這個DOM元素之後,展開後
	  看到的都是屬性,在attributes屬性中保持的所有內容都是屬性節點(只有DOM元素才有屬性節點,保存在attributes屬性中)
	4.操作屬性節點:
		設置:DOM元素.setAttribute("屬性名稱","值")
		獲取:DOM元素.getAttribute("屬性名稱")
	5.屬性和屬性節點區別:任何對象都有屬性,但只有DOM對象才有屬性節點

16.attr()設置或獲取屬性節點
	1.如果傳遞一個參數,是獲取屬性節點的值,如有多個相同元素,只會獲取第一個元素的屬性節點的值
	2.如果傳遞二個參數,是設置(或修改)屬性節點的值,如有多個相同元素,會同時設置(或修改)屬性節點的值,如果該屬性節點不存在,則會同時新增屬性節點

	removeAttr('屬性節點名')移除屬性節點
	移除多個屬性節點時屬性節點名之間以空格隔開

17.prop()不僅可以操作屬性,也可以操作屬性節點,其餘與attr()相同
	與attr()區別,在操作屬性節點時,具有true/false兩個屬性的屬性節點(如selected checked)時,使用prop(),其他使用attr()

18.attr和prop方法练习
19.jQuery操作CSS类 addClass()、removeClass()、toggleClass()
  1.addClass(class|fn)
  作用: 添加一个类  如果要添加多个, 多个类名之间用空格隔开即可

  2.removeClass([class|fn])
  作用: 删除一个类  如果想删除多个, 多个类名之间用空格隔开即可

  3.toggleClass(class|fn[,sw])
  作用: 切换类  有就删除, 没有就添加
20.jQuery文本值的方法 html()、text()、val()
  1.html([val|fn]):設置或獲取文本內容,和原生JS中的innerHTML一模一样,會解析標籤元素
  2.text([val|fn]):設置或獲取文本內容,和原生JS中的innerText一模一样,不會解析標籤元素
  3.val([val|fn|arr]):設置或獲取輸入框內容,和原生JS中的value()方法相同。
21.css()方法
	設置樣式:
	1.可逐個設置
		$("div").css("width", "100px");
  	$("div").css("height", "100px");
  	$("div").css("background", "red");
	2.可鏈式設置
	  $("div").css("width", "100px").css("height", "100px").css("background", "blue");
	3.可批量設置:
	  $("div").css({
      width: "100px",
      height: "100px",
      background: "red"
    });
	獲取樣式值:console.log($("div").css("background"));
22.jQuery位置和尺寸操作的方法	
	
94.jquery原理============================================================	
01.jquery基本結構
	1.jQuery的本質是一個閉包->立即執行函數
  2.jQuery為什麼要使用閉包來實現?->為了避免多個框架時變量衝突或覆蓋問題
  3.jQuery如何讓外界訪問内部定義的局部變量?->通過 window.xxx = xxx 形式處理
  4.jQuery為什麼要给自己傳遞一個window参数?
    (1)為了方便後期壓縮代碼
    (2)為了提升查找的效率
  5.jQuery為什麼要给自己接收一個undefined参数?
    (1)為了方便後期壓縮代碼
    (2)IE9以下的瀏覽器undefined可以被修改,為了保證内部使用的undefined不被修改, 所以需要接收一個正確的undefined
		(3)jQuery.fn = jQuery.prototype
02.jquery入口函數實測
  1.傳入 '' null undefined NaN  0  false, 返回空的jQuery對象
  2.字符串:
   (1)代碼片段:會將創建的DOM元素存儲到jQuery對象中返回
   (2)選擇器: 會將找到的所有元素存儲到jQuery對象中返回
  3.数组:
    會將數组中存儲的元素依次存儲到jQuery對象中立返回
  4.除上述類型以外的:
    會將傳入的數據存儲到jQuery對象中返回
03.