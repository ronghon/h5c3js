70內建對象-數組簡介==============================================================================================
	1.數組(Array)也是對象,與普通對象功能類似,不同的是普通對象是使用字符串作為屬性名,數組使用數字作為索引操作元素
	2.索引(index):從0開始的整數就是索引,數組的存儲性能較普通對象好,在開發中我們經常使用數組來存儲一些數據
	3.創建數組對象:	  var arr = new Array(); 使用typeof 返回值object
	4.向數組中添加元素:
	  語法: 數組[索引]=值   var arr[0]=10;  從0開始
	5.讀取數組中元素  語法: 數組[索引],如果讀取不存在的索引,它不會報錯而是返回undefined
	6.獲取數組長度(元素個數),可以使用length屬性,
	  語法: 數組.length,
		(1)對於連續的數組,可使用length獲取數組的長度(元素個數)
		(2)對於非連續的數組,它會獲取到數組最大索引+1 ex var arr[10]=30-->length=10+1=11;儘量不要創建非連續數組
	7.修改length,如果修改的length大於原長度,則多出來部份會空出來(以逗號隔開),如果小於原長度,則多出的元素會被刪除,因此
		可利用此一特性來刪除元素	
	8.向數組最後一個位置添加元素: 語法:數組[數組.length]=值    ex: arr(arr.length)=10;

71使用字面量創建數組================================================================================
	1.使用字面量創建數組,語法:var arr=[],可以在創建時就指定數組中的元素,var arr=[1,2,3,4,6,10];
	2.使用構造函數創建數組也可以同時添加元素,將要添加的元素作為構造函數的參數傳遞,元素之間以,逗號隔開
	  ex: var arr= new array(10,20,30)
	3.但是只創建一個元素時,使用構造函數代表創建一個長度為值的數組,而使用字面量表示創建的是一個元素
	  var arr= new array(10)-->表示創建一個長度為10的數組 arr[0]=''空值
	  var arr[10]-->表示創建一個元素為10的數組 arr[0]=10
	4.數組中的元素可以是任意的數據類型,也可以是對象,函數或數組(二維數組)

72數組的方法(一)=========================================================================================
	push()可向數組的末尾添加一個或多個元素,並返回數組的新長度,可以將要添加的元素作為方法的參數傳遞,如此這些元素將會自動
	      數組的末尾,並將數組新的長度作為返回值返回
	pop()可刪除數組最後一個元素,並將被刪除的元素作為返回值返回
	unshift()可向數組開頭添加一個或多個元素並返回新的數組長度,向開頭插入元素後,其他元素的索引會依次調整
	shift()可刪除數組開頭第一個元素,並將被刪除的元素作為返回值返回

73數組的遍歷=============================================================================================
	所謂遍歷數組,就是將數組中所有元素都取出來,
	1.利用for循環
		for(var i=0;i<arr.length;i++){
			console.log(arr[i]);	
		}
	2.利用for....in
		for(index in object){
			console.log(arr[index]);
		}
	
75forEach=============================================================================================
	一般使用for循環遍歷數組,JS中提供一forEach方法來遍歷數組
	forEach()
	1.IE8以上支持,IE8(含)以下改以for循環來遍歷 
	2.需要一個函數作為參數,這個函數由我們創建但不由我們調用(由瀏覽器調用),稱之為回調函數
	3.數組中有幾個元素函數就會執行幾次,每次執行時,瀏覽器會將遍歷到的元素,以實參的形式傳遞進來,我們可以定義形參來讀取這些內容
	4.瀏覽器會在回調函數中傳遞三個參數,
		第一參數就是當前正在遍歷的元素-->value
		第二參數就是當前正在遍歷的元素索引-->index
		第三參數就是正在遍歷的數組-->obj
	arr.forEach(function(value,index,obj){
		console.log(value);
	})
	
	
76slice和splice============================================================================
	slice()可以用來從數組中提取指定元素(start,end),該方法不會改變元素數組,而是將截取到的元素封裝到一個新數組中返回
	參數:
	1.截取開始的位置索引,包含開始索引
	2.截取結束的位置索引,不包含結束索引
	 - 第二個參數可以省略不寫,則會截取開始索引之後的所有元素
	 - 索引可以傳一個負值,則表示從後往前計算,-1 倒數最後一個 -2 倒數第二個
	 
	splice()多功能方法-->可以用來刪除數組中指定的元素、替換元素、插入元素
	1.使用splice()會影響到原數組,會將指定元素從原數組中刪除,並將被刪除的元素作為返回值返回
	2.參數:
		第一個,表示開始位置索引
		第二個,表示欲刪除的數量
		第三個及以後,可以傳遞新的元素,並自動插入到開始位置索引

78數組剩餘方法================================================================================
	concat()可以連接兩個或多個數組,並將新的數組返回,該方法不會對原數組產生影響,而會以返回值
	
	join()該方法可以將數組轉換為一個字符串,該方法不會對原數組產生影響,而是將轉換後的字符串作為結果返回
		在join()可指定一個字符串作為參數,這個字符串將會成為數組中元素的連接符,如果不指定連接符,則默認
		使用,逗號為連接符
	reverse()該方法用來反轉數組順序(前面的去後面,後面的到前面來),該方法會直接修改原數組
	sort()用來對數組中的元素進行排序,會影響原數組順序,默認依照unicode編碼進行排序,即使純數字也會依
	unicode	編碼排序,可藉由在()中添加一個回調函數來指定排序規則
	arr.sort(function(a,b)){
		return a-b ;//升序排列
		return b-a ;//降序排列
	}
	回調函數中需要定義兩個形參,瀏覽器將會分別使用數組中的元素作為實參去調用回調函數,使用那個元素調用不確
	定,但是肯定的是,在數組中 a一定在b前面,瀏覽器會根據回調函數的返回值來決定元素的順序
		- 如果返回一個大於0的值,則元素會交換位置
		- 如果返回一個小於0的值,則元素位置不變
		- 如果返回一個0,則兩個元素相等,也不會交換位置。
		
79函數的call()和apply()方法======================================================================================
	call()和apply()這兩個方法都是函數對象的方法,需通過函數對象來調用,當對函數調用call()和apply()時都會調用函數執行,
	在調用call()和apply()時可以將一個對象指定為第一個參數,此時這個對象將會成為函數執行的this
	call()方法可以將實參在對象之後依次傳遞ex fun.call(obj,2,3);
	apply()方法需要將實參封裝到一個數組中統一傳遞ex fun.apply(obj,[2,3]);
	
		function fun(){
			alert("hello");
		}
		var obj={name:"王一"};
	fun();
	fun.call();
	fun.apply();上述三種均為函數調用方法,使函數執行 
	
	總結this情況======
	1.以函數的形式調用時,this永遠都是window
	2.以方法的形式調用時,this是調用方法的對象
	3.以構造函數的形式調用時,this是新創建的那個對象
	4.使用call和apply調用時,this是指定的那個對象

80arguments========================================================================================================
	在函數調用時,瀏覽器每次都會傳遞進兩個隠含的參數
		1.函數的上下文對象this
		2.封裝實參的對象arguments
			- arguments是一個類數組對象,它也可以通過索引來操作數據,也可以獲取長度,在調用函數時,我們所傳遞的實參都會封裝到arguments中保存
			- arguments.length可以用來獲取實參的長度(數量)
			- 我們即使不定義實參,也可以通過arrguments來使用實參,只不過比較不方便
			  arguments[0]表示第一個實參
			  arguments[1]表示第二個實參
			
		
			
	
84字符串方法=============================================================================================
	字符串對象在底層字符串是以字符數組形式保存的,可以使用length來獲取字符串的長度
	var str="hello"-->["h","e","l","l","o"]
	var a=str.length(1);-->e
	1.charAt()可以返回字符串指定位置的字符,根據索引可以獲取指定的字符
	2.charCodeAt()獲取指定位字符的unicode字符編碼
	3.String.fromCharCode()可根據字符編碼去獲取字符(需透過構造函數String調用)
	4.concat()可用來連接兩個或多個字符串,作用和"+"相同
	5.indexOf()可用來檢索一個字符串中是否有指定內容,如果字符串中含有該內容,則會返回第一次出現的索引,如無指定字符則返回-1,可在第二個參數中指定開始查找的位置
	6.lastIndexOf()用法與indexOf()相同,不同的是由後面往前找
	7.slice()可從字符串中截取指定的內容,不會影響原字符串,並將截取到內容返回
		參數(start,end)
			第一個,開始位置的索引(包含開始位置)
			第二個,結束位置的索引(不包含結束位置)
			如果省略第二個參數,則會截取到後面所有的字符串,也可傳遞負數作為參數,則會從後面開始計算起
	8.substring()可用來截取一個字符串,與slice()類似,不同的是這個方法不接受負值,如傳負值,則默認使用0,且它會自動調整參數的位置,如第二個參數小於第一個,則自動交換
	9.substr()用來截取字符串
		參數:
		第一個代表截取位置開始的索引
		第二個代表截取的長度
	10.split()可將一個字符串拆分成一個數組,
		參數:需要一個字符串作為參數,並根據字符串去拆分成數組 ex str.split(",")
	
85正則表逹式==============================================================================================
  是一個對象,用於定義一些字符串的規則,計算機可以根據正則表逹式來檢查字符串是符合規則,獲取將字符串中符合規則的
  內容提取出來

  方式一、使用構造函數創建正則表逹式對象==>較具彈性靈活運用
    var 變量 = new RegExp("正則表逹式","匹配模式");匹配模式i-->忽略大小寫, g-->全局匹配模
	
  var reg =new RegExp("a");//定義一個正則表逹式用來檢查一個字符串中是否含有"a"(區分大小寫) 
		在構造函數中可以傳遞一個匹配模式作為第二參數,可以是 i --> 忽略大小寫	g-->全局匹配模		 
	-使用typeof檢查正則對象類型,會返回object
	-正則表逹式的方法:
    test()  使用這個方法可以用來檢查一個字符串是否符合正則表逹式的規則,如果符合則返回true,否則返回false

86正則表逹式2===============================================================================================
	方式二、使用字面量創建正則表逹式==>較簡單但欠缺彈性
		語法: var 變量 = /正則表逹式/匹配模式
		
		使用 | 表示或者的意思 ex:  var reg =/a|b|C/
				[]也是表示"或"  ex: var reg = /[abc]/
				[a-z]表示任意小寫字母
				[A-Z]表示任意大寫字母
				[A-z]表示所有英文字母
				[^ab]使用^表示除了...以外   [^0-9]除了數字以外
				[0-9]任意數字
				
87字符串與正則相關方法===============================================================================================
	1.split()可將一個字符串拆分成一個數組
		傳遞一個正則表逹式作為參數,則可根據正則表逹式拆分字符串,這個方法即使不指定全局匹配,也會全都拆分	
	2.search()可搜索字符串中是否含有指定內容,如果搜索到指定內容,則會返回第一次出現的索引值,如果没有則返回-1
	  它可以接受一個正則表逹式作為參數,再依據規則檢索字符串,只會查找到第一個,即使設置全局匹配
	3.match()
		1.可以根據正則表逹式,從一個字符串中將符合條件的內容提取出來,
		2.默認match()只會找到第一個符合要求的內容,找到以後就停止檢索,
		3.可以為一個正則表逹式設置多個匹配模式且順序無所謂
		4.會將匹配到的內容封裝到一個數組中返回,即使只查詢到一個結果
		5.可來檢查用戶輸入的電子郵件信箱是否正確
	4.replace()可將字符串中指定內容替換為新的內容
		參數(被替換的內容,新內容),默認只會替換第一個,可用正則表逹式解決